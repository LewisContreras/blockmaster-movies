{"version":3,"sources":["types/types.js","reducers/moviesReducer.js","reducers/uiReducer.js","reducers/crudReducer.js","store/store.js","reducers/authReducer.js","styles/theme.js","firebase/firebase-config.js","actions/uiActions.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","hooks/useForm.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","helpers/goSearchMovies.js","actions/moviesActions.js","components/GoCrud.jsx","components/NavbarMain.jsx","components/NothingFound.jsx","components/CardsContainer.jsx","components/ModalEachMovie.jsx","components/SliderMain.jsx","components/TrailerMovie.jsx","components/TitleSearch.jsx","containers/MainScreen.js","helpers/fileUpload.js","actions/crudActions.js","components/crud/CardsCrud.jsx","components/crud/FormCrud.jsx","components/crud/SearchCrud.jsx","containers/Crud.js","routers/AdminRoute.js","routers/AppRouter.js","containers/App.js","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoadig","mvSelected","mvSearch","mvModal","mvLastDoc","mvTrailer","crSearch","initialState","search","selected","modal","last","trailer","loading","msjError","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","movies","crud","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","theme","extendTheme","styles","global","body","bg","color","colors","brand","primary","secondary","black","black_1","background","white","textStyles","h1","fontSize","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","catch","e","console","log","LoginScreen","useDispatch","useSelector","h","borderRadius","p","w","bgColor","src","onSubmit","preventDefault","document","getElementById","value","className","spacing","my","id","placeholder","borderColor","isRequired","disabled","textAlign","width","onClick","signInWithPopup","cursor","position","px","height","alt","to","as","ReachLink","RegisterScreen","useState","values","setValues","target","useForm","password2","handleInputChange","padding","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","onChange","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","goSearchMovies","category","collection","orderBy","get","snap","docs","forEach","hijo","push","data","where","nameMovie","toUpperCase","movieSearch","categorie","startMovieSelected","getState","lasted","movieLastDoc","movieSelected","movieModal","movie","doc","movieTrailer","GoCrud","history","useHistory","NavbarMain","inputRef","useRef","setLoading","mounted","handleScroll","scrollingElement","scrollTop","scrollHeight","clientHeight","useEffect","addEventListener","current","navCategories","querySelectorAll","i","textContent","style","borderBottom","removeEventListener","handleClickCategories","contenido","scrollTo","top","behavior","border","alignItems","zIndex","backgroundColor","flexDir","pt","mx","minWidth","justifyContent","py","valueInput","children","ref","right","signOut","GiExitDoor","NothingFound","mb","flexDirection","CardsContainer","selectedMovies","pb","templateColumns","gap","mt","map","el","index","backgroundPosition","backgroundSize","backgroundImage","imageUrl","borderLeft","mr","FaStar","calification","toFixed","ModalEachMovie","maxWidth","MdClose","description","year","genre","Math","floor","duration","leftIcon","add","Swal","fire","icon","title","text","handleSeeAfter","display","SwiperCore","use","Navigation","Pagination","SliderMain","spaceBetween","navigation","pagination","bottom","left","TrailerMovie","FaArrowLeft","allowFullScreen","TitleSearch","textSearch","toLowerCase","MainScreen","fileUpload","file","formData","FormData","append","fetch","method","resp","ok","json","cloudRes","secure_url","crudSearch","CardsCrud","searchCrud","handleDelete","delete","handleUpdate","parentElement","area","querySelector","image","inputs","input","handleUpdateSubmit","form","updatedMovie","update","handleChangeImage","click","handleNewImage","files","secureUrl","defaultValue","colorScheme","wordBreak","step","MdUpdate","FormCrud","formik","useFormik","initialValues","validationSchema","Yup","min","required","max","validateOnChange","handleImage","handleSubmit","reset","handleReset","handleChange","errors","SearchCrud","handleSearchCrud","searched","firstElementChild","nextElementSibling","movieSearched","FaHome","goBack","Array","isArray","Crud","AdminRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4434ae9e.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth Logout]',\r\n    \r\n    uiSetError : \"[UI] set Error\",\r\n    uiRemoveError : \"[UI] Remove Error\",\r\n\r\n    uiStartLoading : \"[UI] start loading\",\r\n    uiFinishLoadig: \"[UI] finish loading\",\r\n\r\n    mvSelected: \"[MV] movie selected\",\r\n    mvSearch: \"[MV] movie to search\",\r\n    mvModal: \"[MV] movie modal\",\r\n    mvLastDoc : \"[MV] last query movie\",\r\n    mvTrailer: \"[MV] movie tailer\",\r\n\r\n    crSearch: \"[CR] crud search movie\"\r\n}","import { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n    search:\"Todas\",\r\n    selected:[],\r\n    modal: null,\r\n    last : null,\r\n    trailer : null\r\n} \r\n\r\nexport const moviesReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.mvSelected:\r\n            return {\r\n                ...state,\r\n                selected: action.payload\r\n            }\r\n        \r\n        case types.mvSearch:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        \r\n        case types.mvModal:\r\n            return {\r\n                ...state,\r\n                modal: action.payload\r\n            }\r\n        \r\n        case types.mvLastDoc:\r\n            return {\r\n                ...state,\r\n                last: action.payload\r\n            }\r\n        \r\n        case types.mvTrailer:\r\n            return {\r\n                ...state,\r\n                trailer: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState={\r\n    loading:false,\r\n    msjError: null\r\n}\r\n\r\nexport const registro = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msjError:action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msjError:null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        \r\n        case types.uiFinishLoadig:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n    search:\"\",\r\n} \r\n\r\nexport const crudReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.crSearch:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { moviesReducer } from '../reducers/moviesReducer';\r\nimport { registro } from '../reducers/uiReducer';\r\nimport {crudReducer}  from \"../reducers/crudReducer\"\r\n\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: registro,\r\n    movies: moviesReducer,\r\n    crud: crudReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n    );","\r\nimport { types } from \"../types/types\";\r\n\r\n/* const initialState = {\r\n    uid: 123,\r\n    name: 'Jenny',\r\n    dir: {\r\n        b:12\r\n    }\r\n} */\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {\r\n                \r\n             }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n    styles: {\r\n      global: {\r\n        body: {\r\n          bg: \"#0F0E17\",\r\n          color: \"#FFFFFE\"\r\n        },\r\n      },\r\n    },\r\n \r\n    colors: {\r\n      brand: {\r\n        primary: \"#FED941\",\r\n        secondary:\"#A7A9BE\",\r\n        black: \"#000000\",\r\n        black_1: \"#111111\",\r\n        background: \"#0F0E17\",\r\n        white: \"#FFFFFE\"\r\n      }\r\n    },\r\n    textStyles: {\r\n        h1: {\r\n            fontSize: \"46px\",\r\n            fontWeight: 800,\r\n            lineHeight: \"56px\",\r\n            letterSpacing: \"0.15%\",\r\n        },\r\n        h2: {\r\n            fontSize: \"48px\",\r\n            fontWeight: 700,\r\n            lineHeight: \"58px\",\r\n            letterSpacing: \"0.15%\",\r\n        },\r\n        h3: {\r\n            fontSize: \"37px\",\r\n            fontWeight: 700,\r\n            lineHeight: \"37px\"\r\n        },\r\n        h4: {\r\n            fontSize: \"30px\",\r\n            fontWeight: 600,\r\n            lineHeight: \"34px\"\r\n        },\r\n        h5: {\r\n            fontSize: \"30px\",\r\n            fontWeight: 600,\r\n            lineHeight: \"26px\"\r\n        }\r\n    },\r\n  });\r\n\r\nexport default theme;","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB9S_iSvgObdK4pSzInpBh8tADyQMKXV28\",\r\n    authDomain: \"blockmaster-199804.firebaseapp.com\",\r\n    projectId: \"blockmaster-199804\",\r\n    storageBucket: \"blockmaster-199804.appspot.com\",\r\n    messagingSenderId: \"104763307554\",\r\n    appId: \"1:104763307554:web:448f6ffd599702b96c3c7b\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.removeError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoadig\r\n    }\r\n}\r\n\r\n","import {types} from '../types/types';\r\nimport {googleAuthProvider, firebase} from \"../firebase/firebase-config\"\r\nimport {startLoading, finishLoading} from \"./uiActions\"\r\n\r\n\r\nexport const startLoginEmailPassword =(email, password)=>{\r\n    return (dispatch)=>{\r\n        return firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(({user})=>{\r\n            dispatch(startLoading())\r\n            dispatch(login(user.uid,user.displayName))\r\n        })\r\n        .catch(e=>{\r\n            console.log(e);\r\n            \r\n        })\r\n        dispatch(finishLoading())\r\n        \r\n    }\r\n}\r\n\r\nexport const startGoogleLogin =()=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user})=>{\r\n            dispatch(login(user.uid, user.displayName))\r\n            console.log(user);\r\n        })       \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName =(email,password,name)=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then( async({user})=>{\r\n\r\n            await user.updateProfile({displayName:name})\r\n\r\n            dispatch(login(user.uid, user.displayName))\r\n            console.log(user);\r\n        })\r\n        .catch(e=>{\r\n            console.log(e);\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout=()=>{\r\n    return async(dispatch)=>{\r\n        await firebase.auth().signOut();\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type:types.logout\r\n})","import { Button } from '@chakra-ui/button'\r\nimport { Img } from '@chakra-ui/image'\r\nimport { Input } from '@chakra-ui/input'\r\nimport { Link } from '@chakra-ui/layout'\r\nimport { HStack } from '@chakra-ui/layout'\r\nimport { VStack } from '@chakra-ui/layout'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Center,Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Link as ReachLink} from \"react-router-dom\"\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport \"../../styles/animations.css\"\r\n\r\nfunction LoginScreen() {\r\n    const dispatch = useDispatch()\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    const handleSubmitLogin = (e) =>{\r\n        e.preventDefault()\r\n        let email = document.getElementById(\"email-login\").value\r\n        let password = document.getElementById(\"password-login\").value\r\n        dispatch(startLoginEmailPassword(email,password))\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        \r\n        <Center h=\"100vh\" >\r\n            <Box borderRadius=\"10px\"  p=\"1px\"  w=\"350px\"  bgColor=\"brand.primary\">\r\n                <Center h=\"120px\" borderRadius=\"10px 10px 0 0\"  >\r\n                    <Img src=\"https://i.imgur.com/pwIYVhf.png\" />\r\n                </Center>\r\n                <form onSubmit={handleSubmitLogin} >\r\n                <VStack className=\"scene_element scene_element--clipmidup\" p=\"10px\" h=\"340px\" borderRadius=\"0 0 10px 10px\" spacing=\"10px\" bgColor=\"#14112e\" >\r\n                <Text my=\"10px\" fontWeight=\"600\" fontSize=\"xl\" >Ingresa con correo y contraseña</Text>\r\n                <Input id=\"email-login\" type=\"email\" placeholder=\"Email\" borderColor=\"brand.primary\" color=\"white\" isRequired />\r\n                <Input id=\"password-login\" type=\"password\" borderColor=\"brand.primary\"\r\n                 placeholder=\"Password\" isRequired />\r\n                <Button  disabled={loading} type=\"submit\" bgColor=\"#3C5EEA\" >Entrar</Button>\r\n                \r\n                <Box textAlign=\"center\" width=\"100%\" >\r\n                <HStack   onClick={handleGoogleLogin} cursor=\"pointer\" position=\"relative\" spacing=\"20px\" px=\"6px\" my=\"20px\" borderRadius=\"10px\" bgColor=\"white\" h=\"40px\" width=\"100%\" >\r\n                    <Img position=\"absolute\"  height=\"80%\" src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_\"G\"_Logo.svg' alt=\"google icon\" />\r\n                    <Text fontWeight=\"600\" textAlign=\"center\" width=\"100%\" color=\"black\" >Ingresa con Google</Text>\r\n                </HStack>\r\n                <Link    to=\"/auth/register\" as={ReachLink} >¿No estás registrado?</Link>\r\n                </Box>\r\n                </VStack>\r\n                </form>\r\n                \r\n                \r\n            </Box>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import { Button } from '@chakra-ui/button'\r\nimport { Img } from '@chakra-ui/image'\r\nimport { Input } from '@chakra-ui/input'\r\nimport { Link } from '@chakra-ui/layout'\r\nimport { VStack } from '@chakra-ui/layout'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Center,Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport {Link as ReachLink} from \"react-router-dom\"\r\nimport validator from 'validator'\r\nimport {useForm} from \"../../hooks/useForm\"\r\nimport {setError} from \"../../actions/uiActions\"\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\nimport \"../../styles/animations.css\"\r\n\r\nfunction RegisterScreen() {\r\n    const dispatch = useDispatch()\r\n    // const {msjError} = useSelector(state => state.ui)\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: \"\",\r\n        email:\"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    })\r\n    \r\n    const {name, email, password,password2} = values\r\n\r\n    const formValid = () =>{\r\n        if(name.trim().length === 0){\r\n\r\n            dispatch(setError(\"nombre requerido\"))\r\n            return false\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError(\"email requerido\"))\r\n            return false\r\n        }else if(password2 !== password){\r\n            dispatch(setError(\"password requerido\"))\r\n            return false\r\n        }\r\n        console.log(name);\r\n        \r\n        // dispatch(removeError())\r\n        // debugger\r\n        return true\r\n    }\r\n\r\n    const handleSubmitRegister = (e) =>{\r\n        e.preventDefault();\r\n        if(formValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Center h=\"100vh\" >\r\n            <Box  w=\"350px\" borderRadius=\"10px\" padding=\"14px\"  bgColor=\"brand.primary\" p=\"1px\">\r\n                <form onSubmit={handleSubmitRegister} >\r\n                    {/* {\r\n                        msjError &&\r\n                        (\r\n                            <div>msjError</div>\r\n                        )\r\n                    } */}\r\n\r\n                <Center h=\"120px\" borderRadius=\"10px 10px 0 0\"  >\r\n                    <Img src=\"https://i.imgur.com/pwIYVhf.png\" />\r\n                </Center>\r\n                <VStack h=\"340px\" className=\"scene_element scene_element--clipmidup\" spacing=\"10px\" p=\"10px\" borderRadius=\"0 0 10px 10px\" spacing=\"10px\" bgColor=\"#14112e\" >\r\n                <Text fontSize=\"xl\" fontWeight=\"600\" >Regístrate</Text>\r\n                <Input type=\"text\" borderColor=\"brand.primary\" placeholder=\"Name\" name=\"name\" value={name} onChange={handleInputChange}  />\r\n                <Input type=\"email\" borderColor=\"brand.primary\" placeholder=\"Email\" name=\"email\" value={email} onChange={handleInputChange}   />\r\n                <Input type=\"password\" borderColor=\"brand.primary\" placeholder=\"Password\" name=\"password\" value={password} onChange={handleInputChange}   />\r\n                <Input type=\"password\" borderColor=\"brand.primary\" placeholder=\"Confirm Pasword\" name=\"password2\" value={password2} onChange={handleInputChange}  />\r\n                <Button type=\"submit\" bgColor=\"#3C5EEA\" >Entrar</Button>\r\n                <Link  to=\"/auth/login\" as={ReachLink} >¿Ya estás registrado?</Link>\r\n                </VStack>\r\n                </form>\r\n                \r\n            </Box>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newState = initialState) => {\r\n        setValues( newState );\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport RegisterScreen from '../components/auth/RegisterScreen';\r\n\r\n\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const goSearchMovies = async (category,selected,last) =>{\r\n    \r\n        let movies = [...selected]\r\n        if(category === \"Todas\"){\r\n\r\n                \r\n                movies = []\r\n                \r\n                await db.collection(\"movies\").orderBy(\"nameMovie\").get().then(snap =>{\r\n                    last = snap.docs[snap.docs.length -1].id\r\n\r\n                    snap.forEach(hijo => {\r\n                        movies.push({\r\n                            id:hijo.id,\r\n                            ...hijo.data()\r\n                        })\r\n                    });\r\n\r\n                }).catch(err =>console.log(err))\r\n\r\n            \r\n        }else if(category === \"Más valoradas\"){\r\n\r\n            movies = []\r\n            await db.collection(\"movies\").where(\"calification\", \">=\",7).orderBy(\"calification\",\"desc\").get().then(snap =>{\r\n            \r\n                snap.forEach(hijo => {\r\n                    movies.push({\r\n                        id:hijo.id,\r\n                        ...hijo.data()\r\n                    })\r\n                });\r\n                \r\n            })\r\n\r\n        }else if(category === \"Menos valoradas\"){\r\n\r\n            movies = []\r\n            await db.collection(\"movies\").where(\"calification\", \"<=\",7).orderBy(\"calification\",\"desc\").get().then(snap =>{\r\n            \r\n                snap.forEach(hijo => {\r\n                    movies.push({\r\n                        id:hijo.id,\r\n                        ...hijo.data()\r\n                    })\r\n                });\r\n                \r\n            })\r\n        }else{\r\n\r\n            movies = []\r\n            let nameMovie = category.toUpperCase()\r\n            await db.collection(\"movies\").where(\"nameMovie\", \"==\",nameMovie).get().then(snap =>{\r\n            \r\n                snap.forEach(hijo => {\r\n                    movies.push({\r\n                        id:hijo.id,\r\n                        ...hijo.data()\r\n                    })\r\n                });\r\n                \r\n            }).catch(err =>\r\n                console.log(err))\r\n        }\r\n        return {\r\n            movies: movies,\r\n            last:last\r\n        }\r\n}","import { types } from \"../types/types\";\r\nimport { goSearchMovies } from \"../helpers/goSearchMovies\";\r\n\r\nexport const movieSearch = (categorie) => {\r\n    return {\r\n        type: types.mvSearch,\r\n        payload: categorie\r\n    }\r\n}\r\n\r\nexport const startMovieSelected = (categorie) => {\r\n\r\n    return async (dispatch,getState) => {\r\n        const search = getState().movies.search\r\n        const last = getState().movies.last\r\n        const selected = getState().movies.selected\r\n        const {movies,last:lasted} = await goSearchMovies(categorie,selected,last)\r\n\r\n        dispatch(movieLastDoc(lasted))\r\n\r\n        dispatch(movieSelected(movies))\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const movieSelected = (selected) => {\r\n    return {\r\n        type: types.mvSelected,\r\n        payload: selected\r\n    }\r\n}\r\n\r\nexport const movieModal = (movie) => {\r\n    return {\r\n        type: types.mvModal,\r\n        payload: movie\r\n    }\r\n}\r\n\r\nexport const movieLastDoc = (doc) => {\r\n    return {\r\n        type: types.mvLastDoc,\r\n        payload: doc\r\n    }\r\n}\r\n\r\nexport const movieTrailer = (movie) => {\r\n    return {\r\n        type: types.mvTrailer,\r\n        payload: movie\r\n    }\r\n}","import {  Center } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst GoCrud = () => {\r\n    const history = useHistory()\r\n    return (\r\n        <Center h=\"40px\" px=\"10px\" borderRadius=\"10px\" bgColor=\"brand.primary\" cursor=\"pointer\" fontWeight=\"600\" color=\"brand.background\" onClick={()=>history.push(\"/crud\")} >CRUD</Center>\r\n    )\r\n}\r\n\r\nexport default GoCrud\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Img } from '@chakra-ui/image'\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input'\r\nimport {Flex, HStack, Text } from '@chakra-ui/layout'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useRef } from 'react'\r\nimport {FaSearch} from \"react-icons/fa\"\r\nimport {GiExitDoor} from \"react-icons/gi\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth'\r\nimport {movieLastDoc, movieSearch, startMovieSelected} from \"../actions/moviesActions\"\r\nimport GoCrud from './GoCrud'\r\n\r\nfunction NavbarMain() {\r\n    const inputRef = useRef(\"\")\r\n    const dispatch = useDispatch()\r\n    const uid = useSelector(state => state.auth.uid)\r\n    const search = useSelector(state => state.movies.search)\r\n    const [loading, setLoading] = useState(false)\r\n    const mounted = useRef(false)\r\n\r\n    const handleScroll = (e)=>{\r\n        let scrollTop = document.scrollingElement.scrollTop\r\n        let scrollHeight = document.scrollingElement.scrollHeight\r\n        let viewport = document.scrollingElement.clientHeight\r\n        // if(scrollTop + viewport + 0.5 > scrollHeight  ){\r\n        //     setLoading(true)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll)\r\n        if(loading && search === \"Todas\"){\r\n            dispatch(startMovieSelected(search))\r\n            \r\n        }\r\n        if(!mounted.current){\r\n            let navCategories = document.querySelectorAll(\".nav-category\")\r\n            for (let i of navCategories) {\r\n                if (i.textContent === search) {\r\n                    i.style.color = \"#FED941\"\r\n                    i.style.borderBottom =\"2px solid #FED941\"\r\n                }\r\n            }\r\n            dispatch(movieSearch(search))\r\n            dispatch(startMovieSelected(search))\r\n            mounted.current = true\r\n        }\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\", handleScroll)\r\n        }\r\n    }, [loading,dispatch])\r\n\r\n    const handleClickCategories = (e) =>{\r\n        let contenido = e.target.textContent\r\n        dispatch(movieLastDoc(null))\r\n        dispatch(movieSearch(contenido))\r\n        dispatch(startMovieSelected(contenido))\r\n        setLoading(false)\r\n        window.scrollTo({\r\n            top:380,\r\n            behavior: \"smooth\"\r\n        })\r\n        let navCategories = document.querySelectorAll(\".nav-category\")\r\n        for (let i of navCategories) {\r\n            if (i.textContent === e.target.textContent) {\r\n                i.style.color = \"#FED941\"\r\n                i.style.borderBottom =\"2px solid #FED941\"\r\n            }else{\r\n                i.style.color = \"white\"\r\n                i.style.border =\"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSearch = () =>{\r\n        let valueInput = inputRef.current.value\r\n        dispatch(movieLastDoc(null))\r\n        dispatch(movieSearch(valueInput))\r\n        dispatch(startMovieSelected(valueInput))\r\n        setLoading(false)\r\n        window.scrollTo({\r\n            top:320,\r\n            behavior: \"smooth\"\r\n        })\r\n        let navCategories = document.querySelectorAll(\".nav-category\")\r\n        for (let i of navCategories) {\r\n                i.style.color = \"white\"\r\n                i.style.border = \"none\"\r\n        }\r\n        inputRef.current.value = \"\"\r\n    }\r\n\r\n    return (\r\n        <Flex alignItems=\"center\" position={[\"relative\",\"relative\",\"fixed\"]} top=\"0\" zIndex=\"100\" width=\"100%\" h={[\"auto\",\"auto\",\"112px\"]} backgroundColor=\"brand.background\">\r\n            <HStack flexDir={[\"column\",\"column\",\"row\"]} pt={[\"10px\",\"10px\",\"0\"]} spacing={[0,0,1, 8]} width={[\"100%\",\"100%\",\"90%\" ]}mx=\"auto\" >\r\n                \r\n                <Img src=\"https://i.imgur.com/pwIYVhf.png\" />\r\n\r\n                <HStack minWidth={[\"300px\",\"300px\",\"300px\",\"400px\"]}  justifyContent=\"space-evenly\" spacing={[4,10,2,10]} py={[\"10px\",\"10px\",\"0\"]}>\r\n                    <Text  fontWeight=\"600\"    className=\"nav-category\" onClick={handleClickCategories} cursor=\"pointer\">Todas</Text>\r\n                    <Text className=\"nav-category\" fontWeight=\"600\" onClick={handleClickCategories} cursor=\"pointer\" >Más valoradas</Text>\r\n                    <Text className=\"nav-category\" fontWeight=\"600\" onClick={handleClickCategories} cursor=\"pointer\" >Menos valoradas</Text>\r\n                </HStack>\r\n\r\n                <InputGroup width={[\"90%\",\"90%\",\"100%\"]}  >\r\n                    <InputRightElement onClick={handleSearch} cursor=\"pointer\" backgroundColor=\"brand.primary\"\r\n                         width={[\"72px\",\"72px\",\"32px\",\"72px\"]}  borderRadius=\"0 10px 10px 0\"\r\n                        children={<FaSearch color=\"black\" />}\r\n                    />\r\n                    <Input ref={inputRef}  color=\"brand.black\" border=\"2px solid\" borderColor=\"brand.primary\" borderRadius=\"10px\" backgroundColor=\"brand.white\" type=\"tel\" placeholder=\"Busca tu película favorita\" />\r\n                </InputGroup>\r\n                {\r\n                    uid === \"Th1NLjQWVLao0xs1jr0yxbMvKE23\"\r\n                    ?<GoCrud />\r\n                    :null\r\n                }\r\n                <Icon position={[\"absolute\",\"absolute\", \"relative\"]} top={[\"20px\",\"20px\",\"0\"]} right={[\"20px\",\"20px\",\"0\"]} fontSize=\"30px\" color=\"red\" cursor=\"pointer\" onClick={()=>dispatch(startLogout())} as={GiExitDoor} />\r\n                \r\n            </HStack>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default NavbarMain\r\n","import { Img } from '@chakra-ui/image'\r\nimport { Center, Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction NothingFound() {\r\n    return (\r\n        <Center mb=\"20px\" flexDirection=\"column\">\r\n            <Img src=\"https://i.imgur.com/gJYLZ6P.png\" alt=\"Imagen que indica que nada ha sido encontrado\" />\r\n            <Text>No se han encontrado similitudes para su búsqueda</Text>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default NothingFound\r\n","import Icon from '@chakra-ui/icon'\r\n\r\nimport { Grid, Center, Text, Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaStar } from 'react-icons/fa'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { movieModal } from '../actions/moviesActions'\r\nimport NothingFound from \"./NothingFound.jsx\"\r\nimport \"../styles/animations.css\"\r\n\r\nfunction CardsContainer() {\r\n\r\n    const dispatch = useDispatch()\r\n    const selectedMovies = useSelector(state => state.movies.selected)\r\n\r\n    const handleClickModal = (movie)=>{\r\n        dispatch(movieModal(movie))\r\n    }\r\n\r\n    return (\r\n        \r\n            !selectedMovies.length\r\n            ?<NothingFound/>\r\n            :<Grid pb=\"70px\" className=\"scene_element scene_element--fadeinup\" templateColumns={[\"repeat(auto-fill,150px)\",\"repeat(auto-fill,220px)\"]} gap={[\"5px\",\"10px\"]} px={[\"0\",\"30px\"]} mt=\"20px\" justifyContent={[\"space-evenly\",\"space-between\"]} >\r\n            {\r\n                selectedMovies.map((el, index) =><Box onClick={()=>handleClickModal(el)}\r\n                position=\"relative\" backgroundPosition=\"center\" borderRadius=\"10px\" backgroundSize=\"cover\" cursor=\"pointer\" backgroundImage={el.imageUrl} w={[\"150px\",\"220px\"]} h={[\"225px\",\"330px\"]} key={index} >\r\n                   <Center bgColor=\"rgba(0,0,0,0.5)\"  color=\"brand.primary\" px=\"30px\"  position=\"absolute\" height=\"64px\" top=\"40px\" border=\"2px solid\" borderLeft=\"none\" borderRadius=\"0 32px 32px 0\" borderColor=\"brand.primary\" >\r\n                       <Icon mr=\"10px\"  as={FaStar} />\r\n                       <Text color=\"brand.white\" >{el.calification.toFixed(1)}</Text>\r\n                   </Center>\r\n               </Box>)\r\n            }\r\n            \r\n        </Grid>\r\n\r\n        \r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default CardsContainer\r\n","import { Button } from '@chakra-ui/button'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Img } from '@chakra-ui/image'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport {  Flex, HStack, Text, VStack } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport { FaPlay, FaPlus } from 'react-icons/fa'\r\nimport { MdClose } from 'react-icons/md'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { movieModal } from '../actions/moviesActions'\r\nimport { db } from '../firebase/firebase-config'\r\nimport \"../styles/animations.css\"\r\nimport Swal from \"sweetalert2\"\r\n\r\nfunction ModalEachMovie() {\r\n\r\n    const modal = useSelector(state => state.movies.modal)\r\n    const uid = useSelector(state => state.auth.uid)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSeeAfter =  (modal)=>{\r\n        let movie = {...modal}\r\n        delete movie.id \r\n        db.collection(`${uid}/movies/verdespues`).add(movie)\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: '!Genial!',\r\n            text: 'La película ha sido agregada a tu lista'\r\n          })\r\n    }\r\n\r\n    return (\r\n        !modal\r\n        ?<Box display=\"none\" ></Box>\r\n        :<Flex className=\"scene_element scene_element--fadein\" justifyContent=\"center\" bgColor=\"rgba(15,14,23,0.9)\"  position=\"fixed\" top=\"0\" width=\"100vw\" h=\"100vh\" p={[\"0\",\"40px\"]} zIndex=\"100\" >\r\n            <HStack flexDir={[\"column\",\"row\"]} pt={[\"80px\",\"0\"]} position=\"relative\" spacing=\"30px\" maxWidth=\"700px\" >\r\n                <Img h=\"330px\" width=\"220px\" src={modal.imageUrl} alt=\"Hard Kill\" />\r\n                <Icon onClick={()=>dispatch(movieModal(null))} cursor=\"pointer\" fontSize=\"30px\" top=\"40px\" right=\"40px\" position=\"absolute\" as={MdClose} />\r\n                <VStack pt={3} spacing={3} alignItems=\"start\" >\r\n                    <Text fontWeight=\"600\" fontSize=\"xl\" >{modal.nameMovie}</Text>\r\n                    <Text>{modal.description}</Text>\r\n                    <Text>{`${modal.year} * ${modal.genre} * ${Math.floor(modal.duration/60)}h ${modal.duration%60}min`}</Text>\r\n                    <HStack >\r\n                        <Button disabled leftIcon={<FaPlay/>} color=\"brand.black\" bgColor=\"brand.primary\"  >VER AHORA</Button>\r\n                        <Button  leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" onClick={()=>handleSeeAfter(modal)} >VER DESPUÉS</Button>\r\n                  </HStack>\r\n                </VStack>\r\n            </HStack>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default ModalEachMovie\r\n","import React from 'react'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {Navigation, Pagination} from \"swiper\"\r\n// Import Swiper styles\r\nimport 'swiper/swiper-bundle.css';\r\nimport { Box } from '@chakra-ui/layout';\r\nimport { Img } from '@chakra-ui/image';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { HStack } from '@chakra-ui/layout';\r\nimport { FaPlay, FaPlus } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { movieTrailer } from '../actions/moviesActions';\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\n\r\nfunction SliderMain() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Box  height={[\"220px\",\"220px\",\"400px\"]} px=\"20px\" mt={[\"10px\",\"10px\",\"120px\"]}>\r\n            <Swiper\r\n        spaceBetween={8}\r\n        navigation pagination \r\n        >\r\n          <SwiperSlide>\r\n              <Box height={[\"200px\",\"200px\",\"360px\"]}  position=\"relative\">\r\n                  <Img borderRadius=\"10px\" width=\"100%\" height=\"100%\" src=\"https://i.imgur.com/HjNNUVp.png\" />\r\n                  <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\r\n                    <Button leftIcon={<FaPlay/>} onClick={()=>dispatch(movieTrailer(\"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650554/MUL%C3%81N_Tr%C3%A1iler_Espa%C3%B1ol_DOBLADO_2_Nuevo_2020_Disney_kemb9g.mp4\"))} color=\"brand.black\" bgColor=\"brand.primary\"  >VER AHORA</Button>\r\n                    <Button disabled leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" >VER DESPUÉS</Button>\r\n                  </HStack>\r\n              </Box>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n        <Box height={[\"200px\",\"200px\",\"360px\"]} position=\"relative\">\r\n                  <Img borderRadius=\"10px\" width=\"100%\" height=\"100%\" src=\"https://i.imgur.com/WmJVBQB.png\" />\r\n                  <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\r\n                    <Button leftIcon={<FaPlay/>} color=\"brand.black\" bgColor=\"brand.primary\" onClick={()=>dispatch(movieTrailer(\"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650574/RAYA_Y_EL_%C3%9ALTIMO_DRAG%C3%93N_Tr%C3%A1iler_Espa%C3%B1ol_Latino_DOBLADO_2_Disney_2021_NUEVO_ap7wgc.mp4\"))}  >VER AHORA</Button>\r\n                    <Button disabled leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" >VER DESPUÉS</Button>\r\n                  </HStack>\r\n              </Box>\r\n              \r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n        <Box height={[\"200px\",\"200px\",\"360px\"]} position=\"relative\">\r\n                  <Img borderRadius=\"10px\" width=\"100%\" height=\"100%\" src=\"https://i.imgur.com/tmGy9lQ.png\" />\r\n                  <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\r\n                    <Button leftIcon={<FaPlay/>} color=\"brand.black\" bgColor=\"brand.primary\" onClick={()=>dispatch(movieTrailer(\"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650573/Unidos_de_Disney_y_Pixar_Tr%C3%A1iler_oficial_1_Subtitulado_mxnywn.mp4\"))}  >VER AHORA</Button>\r\n                    <Button disabled leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" >VER DESPUÉS</Button>\r\n                  </HStack>\r\n              </Box>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n        <Box height={[\"200px\",\"200px\",\"360px\"]}  position=\"relative\">\r\n                  <Img borderRadius=\"10px\" width=\"100%\" height=\"100%\" src=\"https://i.imgur.com/zytsah1.jpeg\" />\r\n                  <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\r\n                    <Button leftIcon={<FaPlay/>} color=\"brand.black\" bgColor=\"brand.primary\" onClick={()=>dispatch(movieTrailer(\"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650590/WALL_E_2008_Tra%C3%ADler_Oficial_Doblado_Latino_-_Clasicos_de_Pixar_e7iblo.mp4\"))} >VER AHORA</Button>\r\n                    <Button disabled leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" >VER DESPUÉS</Button>\r\n                  </HStack>\r\n              </Box>\r\n        </SwiperSlide>\r\n        <SwiperSlide>\r\n        <Box height={[\"200px\",\"200px\",\"360px\"]} position=\"relative\">\r\n                  <Img borderRadius=\"10px\" width=\"100%\" height=\"100%\" src=\"https://i.imgur.com/YnqRzkn.jpeg\" />\r\n                  <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\r\n                    <Button leftIcon={<FaPlay/>} color=\"brand.black\" bgColor=\"brand.primary\" onClick={()=>dispatch(movieTrailer(\"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650490/Kung_Fu_Panda_-_Trailer_Espa%C3%B1ol_HD_e5cpcs.mp4\"))} >VER AHORA</Button>\r\n                    <Button disabled leftIcon={<FaPlus/>} border=\"2px solid\" borderColor=\"brand.primary\" color=\"brand.primary\" bgColor=\"brand.background\" >VER DESPUÉS</Button>\r\n                  </HStack>\r\n              </Box>\r\n        </SwiperSlide>\r\n              \r\n        </Swiper>\r\n        </Box>\r\n      );\r\n}\r\n\r\nexport default SliderMain\r\n","import { Box, Center, Icon } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { movieTrailer } from '../actions/moviesActions'\r\nimport \"../styles/animations.css\"\r\n\r\nconst TrailerMovie = () => {\r\n    const dispatch = useDispatch()\r\n    const trailer = useSelector(state => state.movies.trailer)\r\n\r\n    return (\r\n        !trailer\r\n        ?<Box display=\"none\" className=\"scene_element scene_element--fadeinleft\" ></Box>\r\n        :<Center className=\"scene_element scene_element--fadeinright\" bgColor=\"brand.background\" position=\"fixed\" top=\"0\" h=\"100vh\" width=\"100vw\" zIndex=\"200\" >\r\n            <Icon  position=\"absolute\" cursor=\"pointer\" top=\"30px\" left=\"40px\" fontSize=\"30px\" onClick={async (e)=>dispatch(movieTrailer(null))} as={FaArrowLeft} />\r\n            <Box as=\"iframe\" src={`${trailer}`} width=\"80%\" height={[\"200px\",\"300px\",\"400px\",\"80%\" ]} allowFullScreen={true} ></Box>         \r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default TrailerMovie\r\n","import { Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst TitleSearch = () => {\r\n\r\n    const search = useSelector(state => state.movies.search)\r\n    const selected = useSelector(state => state.movies.selected)\r\n    let textSearch = \"\"\r\n    if(  search=== \"\" || !!search && !selected.length ){\r\n        textSearch = \"\"\r\n    }else if(search === \"Todas\"){\r\n        textSearch = search + \" las películas\"\r\n    }else if(search === \"Más valoradas\"  || search === \"Menos valoradas\"  ){\r\n        textSearch = \"Películas \" + search.toLowerCase()\r\n    }else{\r\n        textSearch = `\"${search}\"`\r\n    }\r\n\r\n    return (\r\n        <Box px=\"22px\" py=\"14px\" fontSize=\"3xl\" fontWeight=\"600\" >\r\n            {textSearch}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TitleSearch\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport NavbarMain from \"../components/NavbarMain.jsx\"\r\nimport CardsContainer from \"../components/CardsContainer.jsx\"\r\nimport ModalEachMovie from \"../components/ModalEachMovie\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { movieSearch, startMovieSelected } from '../actions/moviesActions.js'\r\nimport SliderMain from \"../components/SliderMain\"\r\nimport TrailerMovie from '../components/TrailerMovie.jsx'\r\nimport TitleSearch from '../components/TitleSearch.jsx'\r\n\r\nfunction MainScreen() {\r\n    \r\n    \r\n    return (\r\n        <div  >\r\n            <NavbarMain  />\r\n            <SliderMain/>\r\n            <TitleSearch/>\r\n            <CardsContainer />\r\n            \r\n            <ModalEachMovie/>\r\n            <TrailerMovie/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScreen\r\n","export const fileUpload = async (file) => {\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/dfx4uggfe/image/upload\"\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\", \"journal-app\")\r\n    formData.append(\"file\", file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method: \"POST\",\r\n            body:formData\r\n        })\r\n        if(resp.ok){\r\n            const cloudRes = await resp.json()\r\n            console.log(cloudRes);\r\n            return cloudRes.secure_url\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const crudSearch = (movie) => {\r\n    return {\r\n        type: types.crSearch,\r\n        payload: movie\r\n    }\r\n}","import { Box, Button, Center, FormControl, FormLabel, HStack, Icon, Img, Input, Text, Textarea, VStack } from '@chakra-ui/react'\r\nimport React, {  useState } from 'react'\r\nimport { MdClose, MdUpdate } from 'react-icons/md'\r\nimport { db } from '../../firebase/firebase-config'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { fileUpload } from '../../helpers/fileUpload'\r\nimport {crudSearch} from \"../../actions/crudActions\"\r\nimport Swal from \"sweetalert2\"\r\nimport \"../../styles/animations.css\"\r\n\r\n\r\nconst CardsCrud = () => {\r\n\r\n    const [cards, setCards] = useState([])\r\n    const [change, setChange] = useState(true)\r\n    const searchCrud = useSelector(state => state.crud.search)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleDelete = async (movie)=>{\r\n        let hola = await db.doc(`movies/${movie.id}`).delete()\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: '!Genial¡',\r\n            text: 'Ha sido eliminada correctamente'\r\n          })\r\n        dispatch(crudSearch([]))\r\n    }\r\n\r\n    const handleUpdate = async (e,movie)=>{\r\n        let genre = e.target.parentElement.parentElement.parentElement\r\n        let area = genre.querySelector(\"#update-description-area\")\r\n        let image = genre.querySelector(\"#update-image\")\r\n        let inputs = genre.querySelectorAll(\"input\")\r\n        for (const input of inputs) {\r\n            input.disabled = false\r\n            input.style.border = \"1px solid white\"\r\n            if(input.name === \"update\"){\r\n                input.style.backgroundColor = \"#00A300\"\r\n            }\r\n\r\n        }\r\n        area.disabled = false\r\n        area.style.border = \"1px solid white\"\r\n        image.style.display = \"block\"\r\n\r\n    }\r\n\r\n    const handleUpdateSubmit = async (e,movie) =>{\r\n        e.preventDefault()\r\n        let form = e.target\r\n        let area = document.getElementById(\"update-description-area\")\r\n        let image = document.getElementById(\"image-element\")\r\n        let inputs = form.querySelectorAll(\"input\")\r\n        let updatedMovie = {}\r\n        for (const input of inputs) {\r\n            if(input.name === \"update\" || input.name === \"update-image-input\" ){\r\n                \r\n                continue\r\n            }\r\n            if(input.name === \"calification\" || input.name === \"year\" || input.name === \"duration\"){\r\n                updatedMovie[input.name] = +input.value\r\n            }else if(input.name === \"nameMovie\"){\r\n                updatedMovie[input.name] = input.value.toUpperCase()\r\n            }else{\r\n                updatedMovie[input.name] = input.value\r\n            }\r\n        }\r\n        updatedMovie[area.name] = area.value\r\n        updatedMovie.imageUrl = image.src\r\n        let resp = await db.doc(`movies/${movie.id}`).update(updatedMovie)\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: '!Bien!',\r\n            text: 'Ha sido actualizado'\r\n          })\r\n        dispatch(crudSearch(\"\"))\r\n    }\r\n\r\n\r\n    const handleChangeImage = () =>{\r\n        let inputFile = document.getElementById(\"update-image-input\")\r\n        inputFile.click()\r\n    }\r\n\r\n    const handleNewImage = async (e) =>{\r\n        let file = e.target.files[0]\r\n        let secureUrl = await fileUpload(file)\r\n        let image = document.getElementById(\"image-element\")\r\n        image.src = secureUrl\r\n        console.log(secureUrl);\r\n    }\r\n\r\n    return (\r\n        <Box >\r\n            {\r\n                !searchCrud.length\r\n                ?<Text></Text>\r\n                :searchCrud.map(movie =>\r\n                <Center className=\"scene_element scene_element--fadein\" position=\"fixed\" zIndex=\"100\" w=\"100vw\" h=\"100vh\" top=\"0\"  id=\"update-form\" as=\"form\" bgColor=\"rgba(15,14,23,0.9)\"  p=\"10px\" key={movie.id} onSubmit={(e)=>handleUpdateSubmit(e,movie)} >\r\n                    <Box position=\"relative\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" borderRadius=\"10px\"   bgColor=\"brand.background\" border=\"4px solid\" borderColor=\"brand.primary\" height=\"500px\" >\r\n                        <Box position=\"absolute\" top=\"20px\" cursor=\"pointer\" borderRadius=\"4px\" bgColor=\"red\" right=\"20px\" onClick={()=>dispatch(crudSearch(\"\"))}><Icon  color=\"white\" fontSize=\"30px\" as={MdClose} /></Box>\r\n                        <HStack className=\"scene_element scene_element--fadeinright\" px=\"10px\" spacing={10} >\r\n                    <VStack width=\"250px\" >\r\n                    <FormControl id=\"update-name-movie\" display=\"flex\" alignItems=\"baseline\" >\r\n                        <Input textAlign=\"center\"  name=\"nameMovie\" disabled border=\"none\" defaultValue={movie.nameMovie} type=\"text\" />\r\n                        </FormControl>\r\n                    <Img id=\"image-element\" name=\"image\" height=\"240px\" src={movie.imageUrl} />\r\n                    <Button id=\"update-image\" display=\"none\" colorScheme=\"teal\" onClick={handleChangeImage} >Cambiar foto</Button>\r\n                    <Input id=\"update-image-input\" display=\"none\" name=\"update-image-input\" onChange={handleNewImage} type=\"file\" />\r\n                    </VStack>\r\n                    \r\n                    \r\n                    <VStack alignItems=\"start\" width=\"400px\" >\r\n                        <FormControl  id=\"update-description\"   >\r\n                            <FormLabel>{`Descripción: `}</FormLabel>\r\n                            <Textarea id=\"update-description-area\" h=\"160px\" wordBreak=\"break-word\"  name=\"description\" disabled border=\"none\" defaultValue={movie.description}  />\r\n                        </FormControl>\r\n                        <HStack spacing={10} >\r\n                        <FormControl id=\"update-calification\" display=\"flex\" alignItems=\"baseline\" >\r\n                        <FormLabel>{`Calification: `}</FormLabel>\r\n                        <Input h=\"30px\" width=\"60px\" name=\"calification\" disabled border=\"none\" step=\"0.1\" defaultValue={movie.calification} type=\"number\" />\r\n                        </FormControl>\r\n                        <FormControl id=\"update-year\" display=\"flex\" alignItems=\"baseline\" >\r\n                        <FormLabel>{`Año: `}</FormLabel>\r\n                        <Input h=\"30px\" width=\"80px\" name=\"year\" disabled border=\"none\" defaultValue={movie.year} type=\"number\" />\r\n                        </FormControl>\r\n                        </HStack>\r\n                        <HStack spacing={8}>\r\n                        <FormControl id=\"update-genre\" display=\"flex\" alignItems=\"baseline\" >\r\n                        <FormLabel>{`Género: `}</FormLabel>\r\n                        <Input px={1} w=\"100px\" name=\"genre\" disabled border=\"none\" defaultValue={movie.genre} type=\"text\" />\r\n                        </FormControl>\r\n                        <FormControl id=\"update-duration\" display=\"flex\" alignItems=\"baseline\" >\r\n                        <FormLabel>{`Duración: `}</FormLabel>\r\n                        <Input  name=\"duration\" width=\"80px\" disabled border=\"none\"  defaultValue={movie.duration} type=\"number\" />\r\n                        </FormControl>\r\n                        </HStack>\r\n                        \r\n                        \r\n                    </VStack>\r\n                    </HStack  >\r\n                    <HStack mt=\"20px\" className=\"scene_element scene_element--fadeinleft\" >\r\n                        <HStack px=\"10px\" cursor=\"pointer\"  h=\"40px\" borderRadius=\"4px\" bgColor=\"red\" onClick={()=>handleDelete(movie)} ><Text fontWeight=\"600\" >Eliminar </Text><Icon fontSize\r\n                        =\"20px\" as={MdClose}  /></HStack>\r\n                        <HStack px=\"10px\" cursor=\"pointer\"  h=\"40px\" borderRadius=\"4px\" bgColor=\"teal.600\" onClick={(e)=>handleUpdate(e,movie)} ><Text fontWeight=\"600\" >Modificar </Text><Icon fontSize\r\n                        =\"20px\"  as={MdUpdate}  /></HStack>\r\n                        <Input value=\"Actualizar\" cursor=\"pointer\" name=\"update\" disabled type=\"submit\" />\r\n                    </HStack>\r\n                    </Box>\r\n                    \r\n                </Center>)\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardsCrud\r\n","import { Box, Button, Flex, FormControl, FormLabel, HStack, Input, Text, Textarea, VStack } from '@chakra-ui/react'\r\nimport { useFormik } from 'formik'\r\nimport React from 'react'\r\nimport * as Yup from \"yup\"\r\nimport { db } from '../../firebase/firebase-config'\r\nimport { fileUpload } from '../../helpers/fileUpload'\r\nimport Swal from \"sweetalert2\"\r\n\r\nconst FormCrud = () => {\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nameMovie : \"\",\r\n            description:\"\",\r\n            genre:\"\",\r\n            year: 0,\r\n            calification:0,\r\n            duration:0,\r\n            imageUrl:\"\"\r\n        },\r\n        validationSchema: Yup.object({\r\n            nameMovie: Yup.string()\r\n              .min(1, \"Debe tener al menos 1 caracter\")\r\n              .required('Este campo es requerido'),\r\n            description: Yup.string()\r\n            .max(300, \"Puede tener como máximo 300 caracteres\")\r\n            .min(50,\"Debe tener como minimo 50 caracteres\")\r\n            .required(\"Este campo es requerido\"),\r\n            genre: Yup.string()\r\n              .max(15, 'Debe tener 15 caracteres o menos')\r\n              .min(1, \"Debe tener al menos 1 caracter\")\r\n              .required('Este campo es requerido'),\r\n            imageUrl: Yup.string().min(1,\"Debe elegir una imagen\").required(\"requerido\"),\r\n            year: Yup.number()\r\n            .min(1800,\"Debe ser amyor a 1800\")\r\n            .max(2022,\"Debe ser menor a 2023\")\r\n            .required(\"Requerido\"),\r\n            calification: Yup.number()\r\n            .min(0,\"Debe ser mayor a 0\")\r\n            .max(10,\"Debe ser menor a 10\")\r\n            .required(\"Requerido\"),\r\n            duration: Yup.number()\r\n            .min(20,\"Debe ser mayor a 20\")\r\n            .max(600,\"Debe ser menor a 600\")\r\n            .required(\"Requerido\")\r\n        }),\r\n        validateOnChange: values =>{\r\n            console.log(values);\r\n        },\r\n        onSubmit: values =>{\r\n            values.nameMovie = values.nameMovie.toUpperCase()\r\n            db.collection(\"movies\").add(values)\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: '!Genial!',\r\n                text: 'Se ha agregado la película'\r\n              })\r\n        }\r\n    })\r\n\r\n    const handleImage = async  (e)=>{\r\n        let file = e.target.files[0]\r\n        if(file){\r\n            let secureUrl = await fileUpload(file)\r\n            console.log(secureUrl);\r\n            formik.values.imageUrl = secureUrl\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n   const handleReset = (e) =>{\r\n       e.preventDefault()\r\n       e.target.reset()\r\n   }\r\n\r\n    return (\r\n        <Flex mt=\"20px\" justifyContent=\"center\" >\r\n            <Box maxWidth=\"500px\" mb=\"20px\" borderRadius=\"10px\" p=\"20px\" bgColor=\"whiteAlpha.300\" >\r\n                <Box as=\"form\" onSubmit={(e)=>{\r\n                    formik.handleSubmit()\r\n                    handleReset(e)\r\n                }} >\r\n                    <Text textAlign=\"center\" fontSize=\"2xl\" color=\"brand.primary\" >Agrega una nueva película</Text>\r\n                    <VStack spacing=\"20px\" >\r\n                        <FormControl id=\"movie-name\" >\r\n                            <FormLabel>Nombre *</FormLabel>\r\n                            <Input type=\"text\" name=\"nameMovie\" value={formik.values.nameMovie} onChange={formik.handleChange} />\r\n                            {formik.errors.nameMovie ? <Box>{formik.errors.nameMovie}</Box>:null}\r\n                        </FormControl>\r\n                        <FormControl id=\"movie-description\" >\r\n                            <FormLabel>Descripción *</FormLabel>\r\n                            <Textarea height=\"fit-content\" name=\"description\" value={formik.values.description} onChange={formik.handleChange} ></Textarea>\r\n                            {formik.errors.description ? <Box>{formik.errors.description}</Box>:null}\r\n                        </FormControl>\r\n                        <FormControl id=\"movie-genre\" >\r\n                            <FormLabel>Género *</FormLabel>\r\n                            <Input type=\"text\" name=\"genre\" value={formik.values.genre} onChange={formik.handleChange} />\r\n                            {formik.errors.genre ? <Box>{formik.errors.genre}</Box>:null}\r\n                        </FormControl>\r\n                        <FormControl id=\"movie-image\" >\r\n                            <FormLabel  >Imagen *</FormLabel>\r\n                            <Input type=\"file\" name=\"duration\"  onChange={handleImage} />\r\n                            {formik.errors.imageUrl ? <Box>{formik.errors.imageUrl}</Box>:null}\r\n                        </FormControl>\r\n                        <HStack alignItems=\"start\" spacing=\"20px\" >\r\n                        <FormControl id=\"movie-year\" >\r\n                            <FormLabel>Año *</FormLabel>\r\n                            <Input type=\"number\" name=\"year\" value={formik.values.year} onChange={formik.handleChange} />\r\n                            {formik.errors.year ? <Box>{formik.errors.year}</Box>:null}\r\n                        </FormControl>\r\n                        \r\n                        <FormControl id=\"movie-calification\" >\r\n                            <FormLabel>Calificación *</FormLabel>\r\n                            <Input type=\"number\" step=\"0.1\" name=\"calification\" value={formik.values.calification} onChange={formik.handleChange} />\r\n                            {formik.errors.calification ? <Box>{formik.errors.calification}</Box>:null}\r\n                        </FormControl>\r\n                        <FormControl id=\"movie-duration\" >\r\n                            <FormLabel  >Duración *</FormLabel>\r\n                            <Input type=\"number\" name=\"duration\" value={formik.values.duration} onChange={formik.handleChange} />\r\n                            {formik.errors.duration ? <Box>{formik.errors.duration}</Box>:null}\r\n                        </FormControl>\r\n                        \r\n                        </HStack>\r\n                        \r\n                        <Button type=\"submit\" bgColor=\"blackAlpha.600\" width=\"60%\" >Enviar</Button>\r\n                    </VStack>\r\n                </Box>\r\n            </Box>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default FormCrud\r\n","import { Box, Button, HStack, Icon, Input, Text } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { crudSearch } from '../../actions/crudActions'\r\nimport { db } from '../../firebase/firebase-config'\r\nimport { FaHome } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst SearchCrud = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [error, setError] = useState(false)\r\n    const searchCrud = useSelector(state => state.crud.search)\r\n\r\n    const handleSearchCrud = async (e)=>{\r\n        e.preventDefault()\r\n        let searched = e.target.firstElementChild.nextElementSibling.value.toUpperCase()\r\n        let movieSearched = []\r\n        await db.collection(\"movies\").where(\"nameMovie\", \"==\",searched).get().then(snap=>{\r\n            snap.forEach(hijo=>{\r\n                movieSearched.push({\r\n                    id:hijo.id,\r\n                    ...hijo.data()\r\n                })\r\n            })\r\n            setError(false)\r\n        }).catch(err =>setError(true))\r\n        dispatch(crudSearch(movieSearched))\r\n    }\r\n\r\n    return (\r\n        <Box py=\"20px\" maxWidth=\"70%\" mx=\"auto\">\r\n            <HStack  as=\"form\" onSubmit={handleSearchCrud} >\r\n                <Icon cursor=\"pointer\" mx=\"10px\" fontSize=\"20px\" color=\"brand.primary\" as={FaHome} onClick={()=>{\r\n                    dispatch(crudSearch(\"\"))\r\n                    history.goBack()\r\n                }}  />\r\n                <Input type=\"text\" placeholder=\"Nombre de la película...\" />\r\n                <Button bgColor=\"brand.primary\" type=\"submit\"  >Buscar</Button>\r\n            </HStack>\r\n            <Text px=\"50px\" >{searchCrud.length === 0 && Array.isArray(searchCrud)\r\n            ?\"No hay resultados para tu búsqueda\"\r\n        :null}</Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchCrud\r\n\r\n","import React from 'react'\r\nimport CardsCrud from '../components/crud/CardsCrud'\r\nimport FormCrud from '../components/crud/FormCrud'\r\nimport SearchCrud from '../components/crud/SearchCrud'\r\n\r\nconst Crud = () => {\r\n    return (\r\n        <div>\r\n            <SearchCrud/>\r\n            <CardsCrud/>\r\n            <FormCrud/>                      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crud\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const AdminRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    uid,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated && uid === \"Th1NLjQWVLao0xs1jr0yxbMvKE23\" )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\nAdminRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React,{useEffect, useState} from 'react';\r\nimport firebase from \"firebase\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\nimport { login } from \"../actions/auth\"\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {PrivateRoute} from \"./PrivateRoute\"\r\nimport {PublicRoute} from \"./PublicRoute\"\r\nimport MainScreen from '../containers/MainScreen';\r\nimport Crud from '../containers/Crud';\r\nimport { AdminRoute } from './AdminRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n    const uid = useSelector(state => state.auth.uid)\r\n\r\n  \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged(async(user)=>{\r\n\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n\r\n\r\n        })\r\n    }, [dispatch, setChecking])\r\n\r\n    if (checking) {\r\n        return(\r\n            <h1>\r\n                Cragando...\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\"\r\n                        component={ MainScreen }\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <AdminRoute \r\n                        exact\r\n                        path=\"/crud\"\r\n                        component={ Crud }\r\n                        isAuthenticated={isLoggedIn}\r\n                        uid={uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import { ChakraProvider } from '@chakra-ui/react';\nimport { store } from '../store/store';\nimport { Provider } from 'react-redux';\n\nimport theme from \"../styles/theme\"\nimport { AppRouter } from '../routers/AppRouter';\n\n\n\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <ChakraProvider theme={theme} >\n        <AppRouter/>\n    </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}