{"version":3,"sources":["types/types.js","reducers/moviesReducer.js","reducers/uiReducer.js","reducers/crudReducer.js","store/store.js","reducers/authReducer.js","styles/theme.js","firebase/firebase-config.js","actions/auth.js","actions/uiActions.js","components/FormError.jsx","components/FormikInput.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","actions/moviesActions.js","helpers/goSearchMovies.js","components/MenuOptions.jsx","components/LogoutIcon.jsx","components/SearchInput.jsx","components/GoCrud.jsx","components/NavbarMain.jsx","components/NothingFound.jsx","components/CardMovie.jsx","components/CardsContainer.jsx","components/ModalEachMovie.jsx","localData/sliderImages.js","components/SliderMain.jsx","components/TrailerMovie.jsx","components/TitleSearch.jsx","containers/MainScreen.jsx","actions/crudActions.js","helpers/fileUpload.js","components/crud/CardCrudPresenter.jsx","components/crud/CardCrudContainer.jsx","components/crud/CardsCrud.jsx","components/crud/FormCrudPresenter.jsx","components/crud/FormCrud.jsx","components/crud/GoHomeIcon.jsx","components/crud/SearchCrud.jsx","containers/Crud.jsx","routers/AdminRoute.js","routers/AppRouter.js","containers/App.jsx","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoadig","mvSelected","mvSearch","mvModal","mvLastDoc","mvTrailer","crSearch","initialState","search","selected","modal","last","trailer","loading","msjError","reducers","combineReducers","auth","state","arguments","length","undefined","action","type","uid","payload","name","displayName","ui","_objectSpread","movies","crud","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","theme","extendTheme","styles","global","body","bg","color","colors","brand","primary","secondary","black","black_1","background","white","textStyles","h1","fontSize","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","_ref","user","catch","e","console","log","FormError","error","_jsx","Box","children","FormikInput","placeholder","formik","_jsxs","_Fragment","Input","borderColor","value","values","onChange","handleChange","onBlur","handleBlur","isInvalid","touched","errors","LoginScreen","useDispatch","useSelector","useFormik","initialValues","validationSchema","Yup","required","onSubmit","Center","h","borderRadius","p","w","bgColor","Img","src","alt","VStack","as","handleSubmit","className","spacing","Text","my","Button","disabled","isLoading","HStack","onClick","handleGoogleLogin","signInWithPopup","_ref2","cursor","px","width","Icon","FaGoogle","textAlign","Link","to","ReachLink","RegisterScreen","password2","min","oneOf","startRegisterWithEmailPasswordName","createUserWithEmailAndPassword","async","_ref3","updateProfile","padding","minH","AuthRouter","Switch","Route","exact","path","component","Redirect","PrivateRoute","isAuthenticated","Component","rest","_objectWithoutProperties","_excluded","props","PublicRoute","movieSearch","categorie","startMovieSelected","getState","lasted","category","collection","orderBy","get","snap","docs","id","forEach","hijo","push","data","err","where","nameMovie","toUpperCase","goSearchMovies","movieLastDoc","movieSelected","movieModal","movie","doc","movieTrailer","menuOptionsList","MenuOptions","handleClickCategories","contenido","target","textContent","scrollTo","top","behavior","navCategories","document","querySelectorAll","i","style","borderBottom","border","minWidth","justifyContent","py","map","menuOption","index","LogoutIcon","position","right","signOut","GiExitDoor","SearchInput","inputRef","useRef","InputGroup","InputRightElement","handleSearch","valueInput","current","backgroundColor","FaSearch","ref","GoCrud","history","useHistory","NavbarMain","mounted","useEffect","Flex","flexDir","pt","zIndex","alignItems","gap","NothingFound","mb","flexDirection","CardMovie","handleClickModal","backgroundPosition","backgroundSize","backgroundImage","imageUrl","height","borderLeft","mr","FaStar","calification","toFixed","CardsContainer","selectedMovies","Grid","pb","templateColumns","mt","el","ModalEachMovie","maxWidth","MdClose","description","concat","year","genre","Math","floor","duration","leftIcon","FaPlay","FaPlus","add","Swal","fire","icon","title","text","handleSeeAfter","display","sliderImages","url","moviePath","SwiperCore","use","Navigation","Pagination","SliderMain","Swiper","spaceBetween","navigation","pagination","imgInfo","SwiperSlide","bottom","left","TrailerMovie","FaArrowLeft","allowFullScreen","TitleSearch","textSearch","toLowerCase","MainScreen","crudSearch","fileUpload","formData","FormData","append","file","resp","fetch","method","ok","cloudRes","json","secure_url","CardCrudPresenter","handleNewImage","handleDelete","FormControl","colorScheme","getElementById","click","files","setFieldValue","FormLabel","Textarea","CardCrud","max","Date","getFullYear","update","delete","CardsCrud","searchCrud","FormCrudPresenter","handleReset","handleImage","step","FormCrud","validateOnChange","secureUrl","preventDefault","reset","GoHomeIcon","mx","FaHome","goBack","SearchCrud","searched","movieSearched","Array","isArray","Crud","AdminRoute","AppRouter","checking","setChecking","useState","isLoggedIn","setIsLoggedIn","onAuthStateChanged","Router","App","Provider","ChakraProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb988484.chunk.js","sourcesContent":["export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth Logout]',\n    \n    uiSetError : \"[UI] set Error\",\n    uiRemoveError : \"[UI] Remove Error\",\n\n    uiStartLoading : \"[UI] start loading\",\n    uiFinishLoadig: \"[UI] finish loading\",\n\n    mvSelected: \"[MV] movie selected\",\n    mvSearch: \"[MV] movie to search\",\n    mvModal: \"[MV] movie modal\",\n    mvLastDoc : \"[MV] last query movie\",\n    mvTrailer: \"[MV] movie tailer\",\n\n    crSearch: \"[CR] crud search movie\"\n}","import { types } from \"../types/types\";\n\n const initialState = {\n    search:\"Todas\",\n    selected:[],\n    modal: null,\n    last : null,\n    trailer : null\n} \n\nexport const moviesReducer = (state = initialState , action) => {\n    switch (action.type) {\n        case types.mvSelected:\n            return {\n                ...state,\n                selected: action.payload\n            }\n        \n        case types.mvSearch:\n            return {\n                ...state,\n                search: action.payload\n            }\n        \n        case types.mvModal:\n            return {\n                ...state,\n                modal: action.payload\n            }\n        \n        case types.mvLastDoc:\n            return {\n                ...state,\n                last: action.payload\n            }\n        \n        case types.mvTrailer:\n            return {\n                ...state,\n                trailer: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\n\nconst initialState={\n    loading:false,\n    msjError: null\n}\n\nexport const registro = (state=initialState, action)=>{\n    switch (action.type) {\n        case types.uiSetError:\n            return{\n                ...state,\n                msjError:action.payload\n            }\n        \n        case types.uiRemoveError:\n            return{\n                ...state,\n                msjError:null\n            }\n        \n        case types.uiStartLoading:\n            return{\n                ...state,\n                loading:true\n            }\n        \n        case types.uiFinishLoadig:\n            return{\n                ...state,\n                loading:false\n            }\n    \n        default:\n            return state\n    }\n}","import { types } from \"../types/types\";\n\n const initialState = {\n    search:\"\",\n} \n\nexport const crudReducer = (state = initialState , action) => {\n    switch (action.type) {\n        case types.crSearch:\n            return {\n                ...state,\n                search: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { moviesReducer } from '../reducers/moviesReducer';\nimport { registro } from '../reducers/uiReducer';\nimport {crudReducer}  from \"../reducers/crudReducer\"\n\n\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: registro,\n    movies: moviesReducer,\n    crud: crudReducer\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n    );","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n    styles: {\n      global: {\n        body: {\n          bg: \"#0F0E17\",\n          color: \"#FFFFFE\"\n        },\n      },\n    },\n \n    colors: {\n      brand: {\n        primary: \"#FED941\",\n        secondary:\"#A7A9BE\",\n        black: \"#000000\",\n        black_1: \"#111111\",\n        background: \"#0F0E17\",\n        white: \"#FFFFFE\"\n      }\n    },\n    textStyles: {\n        h1: {\n            fontSize: \"46px\",\n            fontWeight: 800,\n            lineHeight: \"56px\",\n            letterSpacing: \"0.15%\",\n        },\n        h2: {\n            fontSize: \"48px\",\n            fontWeight: 700,\n            lineHeight: \"58px\",\n            letterSpacing: \"0.15%\",\n        },\n        h3: {\n            fontSize: \"37px\",\n            fontWeight: 700,\n            lineHeight: \"37px\"\n        },\n        h4: {\n            fontSize: \"30px\",\n            fontWeight: 600,\n            lineHeight: \"34px\"\n        },\n        h5: {\n            fontSize: \"30px\",\n            fontWeight: 600,\n            lineHeight: \"26px\"\n        }\n    },\n  });\n\nexport default theme;","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: \"blockmaster-199804.firebaseapp.com\",\n    projectId: \"blockmaster-199804\",\n    storageBucket: \"blockmaster-199804.appspot.com\",\n    messagingSenderId: \"104763307554\",\n    appId: \"1:104763307554:web:448f6ffd599702b96c3c7b\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport{\n    db,\n    googleAuthProvider,\n    firebase\n}","import { types } from \"../types/types\";\nimport { googleAuthProvider, firebase } from \"../firebase/firebase-config\";\nimport { startLoading } from \"./uiActions\";\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(startLoading());\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    // dispatch(finishLoading())\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        console.log(user);\n      });\n  };\n};\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n\n        dispatch(login(user.uid, user.displayName));\n        console.log(user);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n};\n\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName,\n    },\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import { types } from \"../types/types\";\n\nexport const setError = (err) => {\n    return {\n        type: types.uiSetError,\n        payload: err\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: types.removeError\n    }\n}\n\nexport const startLoading = () => {\n    return {\n        type: types.uiStartLoading\n    }\n}\n\nexport const finishLoading = () => {\n    return {\n        type: types.uiFinishLoadig\n    }\n}\n\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst FormError = ({ error }) => {\n  return error ? <Box>{error}</Box> : null;\n};\n\nexport { FormError };\n","import React from \"react\";\nimport { Input } from \"@chakra-ui/input\";\nimport { FormError } from \"./FormError\";\n\nconst FormikInput = ({ name, type, placeholder, formik }) => {\n  return (\n    <>\n      <Input\n        type={type}\n        borderColor=\"brand.primary\"\n        placeholder={placeholder}\n        name={name}\n        value={formik.values[name]}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        isInvalid={\n          formik.touched[name] && !!formik.errors[name]\n        }\n      />\n      <FormError error={formik.errors[name]} />\n    </>\n  );\n};\n\nexport { FormikInput };\n","import { Button } from \"@chakra-ui/button\";\nimport { Img } from \"@chakra-ui/image\";\nimport { VStack, Text, Center, Box, Link, HStack } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link as ReachLink } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../actions/auth\";\nimport { FaGoogle } from \"react-icons/fa\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FormikInput } from \"../FormikInput\";\n\nfunction LoginScreen() {\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.ui);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"Debe ser un correo válido\")\n        .required(\"El correo es obligatorio\"),\n      password: Yup.string().required(\"La contraseña es obligatoria\"),\n    }),\n    onSubmit: (values) => {\n      const { email, password } = values;\n      dispatch(startLoginEmailPassword(email, password));\n    },\n  });\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  return (\n    <Center h=\"100vh\">\n      <Box borderRadius=\"10px\" p=\"1px\" w=\"350px\" bgColor=\"brand.primary\">\n        <Center h=\"120px\" borderRadius=\"10px 10px 0 0\">\n          <Img src=\"https://i.imgur.com/pwIYVhf.png\" alt=\"Logo de Blockmaster\" />\n        </Center>\n          <VStack\n          as=\"form\"\n            onSubmit={formik.handleSubmit}\n            className=\"scene_element scene_element--clipmidup\"\n            p=\"10px\"\n            h=\"340px\"\n            borderRadius=\"0 0 10px 10px\"\n            spacing=\"15px\"\n            bgColor=\"#14112e\"\n          >\n            <Text my=\"10px\" fontWeight=\"600\" fontSize=\"xl\">\n              Ingresa con correo y contraseña\n            </Text>\n            <FormikInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              formik={formik}\n            />\n            <FormikInput\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              formik={formik}\n            />\n            <Button\n              disabled={loading}\n              type=\"submit\"\n              bgColor=\"#3C5EEA\"\n              isLoading={loading}\n            >\n              Entrar\n            </Button>\n              <HStack\n                onClick={handleGoogleLogin}\n                cursor=\"pointer\"\n                px=\"6px\"\n                borderRadius=\"10px\"\n                bgColor=\"white\"\n                h=\"40px\"\n                width=\"100%\"\n              >\n                <Icon as={FaGoogle} fontSize=\"20px\" color=\"#3C5EEA\" />\n                <Text\n                  fontWeight=\"600\"\n                  textAlign=\"center\"\n                  width=\"100%\"\n                  color=\"black\"\n                >\n                  Ingresa con Google\n                </Text>\n              </HStack>\n              <Link to=\"/auth/register\" as={ReachLink}>\n                ¿No estás registrado?\n              </Link>\n          </VStack>\n      </Box>\n    </Center>\n  );\n}\n\nexport default LoginScreen;\n","import { Button } from \"@chakra-ui/button\";\nimport { Img } from \"@chakra-ui/image\";\nimport { Center, Box, Text, VStack, Link } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link as ReachLink } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\nimport \"../../styles/animations.css\";\nimport { FormikInput } from \"../FormikInput\";\n\nfunction RegisterScreen() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Nombre requerido\"),\n      email: Yup.string().email(\"Email inválido\").required(\"Email requerido\"),\n      password: Yup.string()\n        .min(6, \"La contraseña debe tener al menos 6 caracteres\")\n        .required(\"Contraseña requerida\"),\n      password2: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Las contraseñas deben coincidir\")\n        .required(\"Confirmar contraseña es requerido\"),\n    }),\n    onSubmit: (values) => {\n      const { name, email, password } = values;\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    },\n  });\n\n  return (\n    <Center h=\"100vh\">\n      <Box\n        w=\"350px\"\n        borderRadius=\"10px\"\n        padding=\"14px\"\n        bgColor=\"brand.primary\"\n        p=\"1px\"\n      >\n        <Center h=\"120px\" borderRadius=\"10px 10px 0 0\">\n          <Img src=\"https://i.imgur.com/pwIYVhf.png\" />\n        </Center>\n        <VStack\n          as=\"form\"\n          onSubmit={formik.handleSubmit}\n          minH=\"340px\"\n          className=\"scene_element scene_element--clipmidup\"\n          spacing=\"10px\"\n          p=\"10px\"\n          borderRadius=\"0 0 10px 10px\"\n          bgColor=\"#14112e\"\n        >\n          <Text fontSize=\"xl\" fontWeight=\"600\">\n            Regístrate\n          </Text>\n          <FormikInput name=\"name\" type=\"text\" placeholder=\"Name\" formik={formik} />\n          <FormikInput name=\"email\" type=\"email\" placeholder=\"Email\" formik={formik} />\n          <FormikInput name=\"password\" type=\"password\" placeholder=\"Password\" formik={formik} />\n          <FormikInput name=\"password2\" type=\"password\" placeholder=\"Confirm Password\" formik={formik} />\n          <Button type=\"submit\" bgColor=\"#3C5EEA\">\n            Entrar\n          </Button>\n          <Link to=\"/auth/login\" as={ReachLink}>\n            ¿Ya estás registrado?\n          </Link>\n        </VStack>\n      </Box>\n    </Center>\n  );\n}\n\nexport { RegisterScreen };\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginScreen from \"../components/auth/LoginScreen\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import { types } from \"../types/types\";\nimport { goSearchMovies } from \"../helpers/goSearchMovies\";\n\nexport const movieSearch = (categorie) => {\n  return {\n    type: types.mvSearch,\n    payload: categorie,\n  };\n};\n\nexport const startMovieSelected = (categorie) => {\n  return async (dispatch, getState) => {\n    const last = getState().movies.last;\n    const selected = getState().movies.selected;\n    const { movies, last: lasted } = await goSearchMovies(\n      categorie,\n      selected,\n      last\n    );\n\n    dispatch(movieLastDoc(lasted));\n\n    dispatch(movieSelected(movies));\n  };\n};\n\nexport const movieSelected = (selected) => {\n  return {\n    type: types.mvSelected,\n    payload: selected,\n  };\n};\n\nexport const movieModal = (movie) => {\n  return {\n    type: types.mvModal,\n    payload: movie,\n  };\n};\n\nexport const movieLastDoc = (doc) => {\n  return {\n    type: types.mvLastDoc,\n    payload: doc,\n  };\n};\n\nexport const movieTrailer = (movie) => {\n  return {\n    type: types.mvTrailer,\n    payload: movie,\n  };\n};\n","import { db } from \"../firebase/firebase-config\";\n\nexport const goSearchMovies = async (category,selected,last) =>{\n    \n        let movies = [...selected]\n        if(category === \"Todas\"){\n\n                \n                movies = []\n                \n                await db.collection(\"movies\").orderBy(\"nameMovie\").get().then(snap =>{\n                    last = snap.docs[snap.docs.length -1].id\n\n                    snap.forEach(hijo => {\n                        movies.push({\n                            id:hijo.id,\n                            ...hijo.data()\n                        })\n                    });\n\n                }).catch(err =>console.log(err))\n\n            \n        }else if(category === \"Más valoradas\"){\n\n            movies = []\n            await db.collection(\"movies\").where(\"calification\", \">=\",7).orderBy(\"calification\",\"desc\").get().then(snap =>{\n            \n                snap.forEach(hijo => {\n                    movies.push({\n                        id:hijo.id,\n                        ...hijo.data()\n                    })\n                });\n                \n            })\n\n        }else if(category === \"Menos valoradas\"){\n\n            movies = []\n            await db.collection(\"movies\").where(\"calification\", \"<=\",7).orderBy(\"calification\",\"desc\").get().then(snap =>{\n            \n                snap.forEach(hijo => {\n                    movies.push({\n                        id:hijo.id,\n                        ...hijo.data()\n                    })\n                });\n                \n            })\n        }else{\n\n            movies = []\n            let nameMovie = category.toUpperCase()\n            await db.collection(\"movies\").where(\"nameMovie\", \"==\",nameMovie).get().then(snap =>{\n            \n                snap.forEach(hijo => {\n                    movies.push({\n                        id:hijo.id,\n                        ...hijo.data()\n                    })\n                });\n                \n            }).catch(err =>\n                console.log(err))\n        }\n        return {\n            movies: movies,\n            last:last\n        }\n}","import React from \"react\";\nimport { HStack, Text } from \"@chakra-ui/layout\";\nimport { useDispatch } from \"react-redux\";\nimport { movieLastDoc, movieSearch, startMovieSelected } from \"../actions/moviesActions\";\n\nconst menuOptionsList = [\"Todas\", \"Más valoradas\", \"Menos valoradas\"];\n\nconst MenuOptions = () => {\n    const dispatch = useDispatch();\n  const handleClickCategories = (e) => {\n    let contenido = e.target.textContent;\n    dispatch(movieLastDoc(null));\n    dispatch(movieSearch(contenido));\n    dispatch(startMovieSelected(contenido));\n    window.scrollTo({\n      top: 380,\n      behavior: \"smooth\",\n    });\n    let navCategories = document.querySelectorAll(\".nav-category\");\n    for (let i of navCategories) {\n      if (i.textContent === e.target.textContent) {\n        i.style.color = \"#FED941\";\n        i.style.borderBottom = \"2px solid #FED941\";\n      } else {\n        i.style.color = \"white\";\n        i.style.border = \"none\";\n      }\n    }\n  };\n\n  return (\n    <HStack\n      minWidth={[\"300px\", \"300px\", \"300px\", \"400px\"]}\n      justifyContent=\"space-evenly\"\n      spacing={[4, 10, 2, 10]}\n      py={[\"10px\", \"10px\", \"0\"]}\n    >\n      {menuOptionsList.map((menuOption, index) => (\n        <Text\n          key={index}\n          className=\"nav-category\"\n          fontWeight=\"600\"\n          onClick={handleClickCategories}\n          cursor=\"pointer\"\n        >\n          {menuOption}\n        </Text>\n      ))}\n    </HStack>\n  );\n};\n\nexport { MenuOptions };\n","import React from \"react\";\nimport { GiExitDoor } from \"react-icons/gi\";\nimport { useDispatch} from \"react-redux\";\nimport { startLogout } from \"../actions/auth\";\nimport { Icon } from \"@chakra-ui/react\";\n\n\nconst LogoutIcon = () => {\n    const dispatch = useDispatch();\n    return (\n        <Icon\n          position={[\"absolute\", \"absolute\", \"relative\"]}\n          top={[\"20px\", \"20px\", \"0\"]}\n          right={[\"20px\", \"20px\", \"0\"]}\n          fontSize=\"30px\"\n          color=\"red\"\n          cursor=\"pointer\"\n          onClick={() => dispatch(startLogout())}\n          as={GiExitDoor}\n        />\n    )\n}\n\nexport { LogoutIcon }","import React, { useRef } from \"react\";\nimport { InputGroup, InputRightElement, Input } from \"@chakra-ui/input\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  movieLastDoc,\n  movieSearch,\n  startMovieSelected,\n} from \"../actions/moviesActions\";\n\nconst SearchInput = () => {\n  const inputRef = useRef(\"\");\n  const dispatch = useDispatch();\n\n  const handleSearch = () => {\n    let valueInput = inputRef.current.value;\n    dispatch(movieLastDoc(null));\n    dispatch(movieSearch(valueInput));\n    dispatch(startMovieSelected(valueInput));\n    window.scrollTo({\n      top: 320,\n      behavior: \"smooth\",\n    });\n    let navCategories = document.querySelectorAll(\".nav-category\");\n    for (let i of navCategories) {\n      i.style.color = \"white\";\n      i.style.border = \"none\";\n    }\n    inputRef.current.value = \"\";\n  };\n\n  return (\n    <InputGroup width={[\"90%\", \"90%\", \"100%\"]}>\n      <InputRightElement\n        onClick={handleSearch}\n        cursor=\"pointer\"\n        backgroundColor=\"brand.primary\"\n        width={[\"72px\", \"72px\", \"32px\", \"72px\"]}\n        borderRadius=\"0 10px 10px 0\"\n        children={<FaSearch color=\"black\" />}\n      />\n      <Input\n        ref={inputRef}\n        color=\"brand.black\"\n        border=\"2px solid\"\n        borderColor=\"brand.primary\"\n        borderRadius=\"10px\"\n        backgroundColor=\"brand.white\"\n        type=\"tel\"\n        placeholder=\"Busca tu película favorita\"\n      />\n    </InputGroup>\n  );\n};\n\nexport { SearchInput };\n","import { Center } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GoCrud = () => {\n  const history = useHistory();\n  return (\n    <Center\n      h=\"40px\"\n      px=\"10px\"\n      borderRadius=\"10px\"\n      bgColor=\"brand.primary\"\n      cursor=\"pointer\"\n      fontWeight=\"600\"\n      color=\"brand.background\"\n      onClick={() => history.push(\"/crud\")}\n    >\n      CRUD\n    </Center>\n  );\n};\n\nexport { GoCrud };\n","import { Img } from \"@chakra-ui/image\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieSearch, startMovieSelected } from \"../actions/moviesActions\";\nimport { MenuOptions } from \"./MenuOptions\";\nimport { LogoutIcon } from \"./LogoutIcon\";\nimport { SearchInput } from \"./SearchInput\";\nimport { GoCrud } from \"./GoCrud\";\n\nfunction NavbarMain() {\n  const dispatch = useDispatch();\n  const search = useSelector((state) => state.movies.search);\n  const uid = useSelector((state) => state.auth.uid);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (!mounted.current) {\n      dispatch(movieSearch(search));\n      dispatch(startMovieSelected(search));\n      mounted.current = true;\n    }\n  }, [dispatch, search]);\n\n  return (\n    <Flex\n      flexDir={[\"column\", \"column\", \"row\"]}\n      position={[\"relative\", \"relative\", \"fixed\"]}\n      top=\"0\"\n      pt={[\"10px\", \"10px\", \"0\"]}\n      width=\"100%\"\n      px={[\"20px\", \"40px\"]}\n      h={[\"auto\", \"auto\", \"112px\"]}\n      backgroundColor=\"brand.background\"\n      zIndex=\"100\"\n      alignItems=\"center\"\n      gap=\"4\"\n    >\n      <Img src=\"https://i.imgur.com/pwIYVhf.png\" alt=\"Logo de Blockmaster\" />\n      <MenuOptions />\n      <SearchInput />\n      <LogoutIcon />\n      {uid === process.env.REACT_APP_ADMIN_CRUD && <GoCrud />}\n    </Flex>\n  );\n}\n\nexport default NavbarMain;\n","import { Img } from \"@chakra-ui/image\";\nimport { Center, Text } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nfunction NothingFound() {\n  return (\n    <Center mb=\"20px\" flexDirection=\"column\">\n      <Img\n        src=\"https://i.imgur.com/gJYLZ6P.png\"\n        alt=\"Imagen que indica que nada ha sido encontrado\"\n      />\n      <Text>No se han encontrado similitudes para su búsqueda</Text>\n    </Center>\n  );\n}\n\nexport default NothingFound;\n","import React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport Icon from \"@chakra-ui/icon\";\nimport { Center, Text, Box } from \"@chakra-ui/layout\";\nimport { useDispatch } from \"react-redux\";\nimport { movieModal } from \"../actions/moviesActions\";\n\nconst CardMovie = ({ movie }) => {\n  const dispatch = useDispatch();\n\n  const handleClickModal = (movie) => {\n    dispatch(movieModal(movie));\n  };\n  return (\n    <Box\n      onClick={() => handleClickModal(movie)}\n      position=\"relative\"\n      backgroundPosition=\"center\"\n      borderRadius=\"10px\"\n      backgroundSize=\"cover\"\n      cursor=\"pointer\"\n      backgroundImage={movie.imageUrl}\n      w={[\"150px\", \"220px\"]}\n      h={[\"225px\", \"330px\"]}\n    >\n      <Center\n        bgColor=\"rgba(0,0,0,0.5)\"\n        color=\"brand.primary\"\n        px=\"30px\"\n        position=\"absolute\"\n        height=\"64px\"\n        top=\"40px\"\n        border=\"2px solid\"\n        borderLeft=\"none\"\n        borderRadius=\"0 32px 32px 0\"\n        borderColor=\"brand.primary\"\n      >\n        <Icon mr=\"10px\" as={FaStar} />\n        <Text color=\"brand.white\">{movie.calification.toFixed(1)}</Text>\n      </Center>\n    </Box>\n  );\n};\n\nexport { CardMovie };\n","import { Grid } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport NothingFound from \"./NothingFound.jsx\";\nimport \"../styles/animations.css\";\nimport { CardMovie } from \"./CardMovie.jsx\";\n\nfunction CardsContainer() {\n  const selectedMovies = useSelector((state) => state.movies.selected);\n\n  return !selectedMovies.length ? (\n    <NothingFound />\n  ) : (\n    <Grid\n      pb=\"70px\"\n      className=\"scene_element scene_element--fadeinup\"\n      templateColumns={[\"repeat(auto-fill,150px)\", \"repeat(auto-fill,220px)\"]}\n      gap={[\"5px\", \"10px\"]}\n      px={[\"0\", \"30px\"]}\n      mt=\"20px\"\n      justifyContent={[\"space-evenly\", \"space-between\"]}\n    >\n      {selectedMovies.map((el, index) => (\n        <CardMovie key={index} movie={el} />\n      ))}\n    </Grid>\n  );\n}\n\nexport default CardsContainer;\n","import { Button } from \"@chakra-ui/button\";\nimport Icon from \"@chakra-ui/icon\";\nimport { Img } from \"@chakra-ui/image\";\nimport { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { FaPlay, FaPlus } from \"react-icons/fa\";\nimport { MdClose } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieModal } from \"../actions/moviesActions\";\nimport { db } from \"../firebase/firebase-config\";\nimport \"../styles/animations.css\";\nimport Swal from \"sweetalert2\";\n\nfunction ModalEachMovie() {\n  const modal = useSelector((state) => state.movies.modal);\n  const uid = useSelector((state) => state.auth.uid);\n  const dispatch = useDispatch();\n\n  const handleSeeAfter = (modal) => {\n    let movie = { ...modal };\n    delete movie.id;\n    db.collection(`${uid}/movies/verdespues`).add(movie);\n    Swal.fire({\n      icon: \"success\",\n      title: \"!Genial!\",\n      text: \"La película ha sido agregada a tu lista\",\n    });\n  };\n\n  return !modal ? (\n    <Box display=\"none\"></Box>\n  ) : (\n    <Flex\n      className=\"scene_element scene_element--fadein\"\n      justifyContent=\"center\"\n      bgColor=\"rgba(15,14,23,0.9)\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"100vw\"\n      h=\"100vh\"\n      p={[\"0\", \"40px\"]}\n      zIndex=\"100\"\n    >\n      <HStack\n        flexDir={[\"column\", \"row\"]}\n        pt={[\"80px\", \"0\"]}\n        position=\"relative\"\n        spacing=\"30px\"\n        maxWidth=\"700px\"\n      >\n        <Img h=\"330px\" width=\"220px\" src={modal.imageUrl} alt=\"Hard Kill\" />\n        <Icon\n          onClick={() => dispatch(movieModal(null))}\n          cursor=\"pointer\"\n          fontSize=\"30px\"\n          top=\"40px\"\n          right=\"40px\"\n          position=\"absolute\"\n          as={MdClose}\n        />\n        <VStack pt={3} spacing={3} alignItems=\"start\">\n          <Text fontWeight=\"600\" fontSize=\"xl\">\n            {modal.nameMovie}\n          </Text>\n          <Text>{modal.description}</Text>\n          <Text>{`${modal.year} * ${modal.genre} * ${Math.floor(\n            modal.duration / 60\n          )}h ${modal.duration % 60}min`}</Text>\n          <HStack>\n            <Button\n              disabled\n              leftIcon={<FaPlay />}\n              color=\"brand.black\"\n              bgColor=\"brand.primary\"\n            >\n              VER AHORA\n            </Button>\n            <Button\n              leftIcon={<FaPlus />}\n              border=\"2px solid\"\n              borderColor=\"brand.primary\"\n              color=\"brand.primary\"\n              bgColor=\"brand.background\"\n              onClick={() => handleSeeAfter(modal)}\n            >\n              VER DESPUÉS\n            </Button>\n          </HStack>\n        </VStack>\n      </HStack>\n    </Flex>\n  );\n}\n\nexport default ModalEachMovie;\n","export const sliderImages = [\n  {\n    url: \"https://i.imgur.com/HjNNUVp.png\",\n    alt: \"Imagen de la pelicula Mulan\",\n    moviePath:\n      \"v1624650554/MUL%C3%81N_Tr%C3%A1iler_Espa%C3%B1ol_DOBLADO_2_Nuevo_2020_Disney_kemb9g.mp4\",\n  },\n  {\n    url: \"https://i.imgur.com/WmJVBQB.png\",\n    alt: \"Imagen de la pelicula Raya y el último dragón\",\n    moviePath:\n      \"v1624650574/RAYA_Y_EL_%C3%9ALTIMO_DRAG%C3%93N_Tr%C3%A1iler_Espa%C3%B1ol_Latino_DOBLADO_2_Disney_2021_NUEVO_ap7wgc.mp4\",\n  },\n  {\n    url: \"https://i.imgur.com/tmGy9lQ.png\",\n    alt: \"Imagen de la pelicula Unidos de Disney y Pixar\",\n    moviePath:\n      \"v1624650573/Unidos_de_Disney_y_Pixar_Tr%C3%A1iler_oficial_1_Subtitulado_mxnywn.mp4\",\n  },\n  {\n    url: \"https://i.imgur.com/zytsah1.jpeg\",\n    alt: \"Imagen de la pelicula WALL-E\",\n    moviePath:\n      \"v1624650590/WALL_E_2008_Tra%C3%ADler_Oficial_Doblado_Latino_-_Clasicos_de_Pixar_e7iblo.mp4\",\n  },\n  {\n    url: \"https://i.imgur.com/YnqRzkn.jpeg\",\n    alt: \"Imagen de la pelicula Kung Fu Panda\",\n    moviePath:\n      \"https://res.cloudinary.com/dfx4uggfe/video/upload/v1624650490/Kung_Fu_Panda_-_Trailer_Espa%C3%B1ol_HD_e5cpcs.mp4\",\n  },\n];\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nimport { Img } from \"@chakra-ui/image\";\nimport { Button } from \"@chakra-ui/button\";\nimport { HStack, Box } from \"@chakra-ui/layout\";\nimport { FaPlay, FaPlus } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { movieTrailer } from \"../actions/moviesActions\";\nimport { sliderImages } from \"../localData/sliderImages\";\n\nSwiperCore.use([Navigation, Pagination]);\n\nfunction SliderMain() {\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      height={[\"220px\", \"220px\", \"400px\"]}\n      px=\"20px\"\n      mt={[\"10px\", \"10px\", \"120px\"]}\n    >\n      <Swiper spaceBetween={8} navigation pagination>\n        {sliderImages.map((imgInfo, index) => (\n          <SwiperSlide key={index}>\n            <Box height={[\"200px\", \"200px\", \"360px\"]} position=\"relative\">\n              <Img\n                borderRadius=\"10px\"\n                width=\"100%\"\n                height=\"100%\"\n                src={imgInfo.url}\n                alt={imgInfo.alt}\n              />\n              <HStack position=\"absolute\" bottom=\"20px\" left=\"20px\">\n                <Button\n                  leftIcon={<FaPlay />}\n                  color=\"brand.black\"\n                  bgColor=\"brand.primary\"\n                  onClick={() =>\n                    dispatch(\n                      movieTrailer(\n                        `https://res.cloudinary.com/dfx4uggfe/video/upload/${imgInfo.moviePath}`\n                      )\n                    )\n                  }\n                >\n                  VER AHORA\n                </Button>\n                <Button\n                  disabled\n                  leftIcon={<FaPlus />}\n                  border=\"2px solid\"\n                  borderColor=\"brand.primary\"\n                  color=\"brand.primary\"\n                  bgColor=\"brand.background\"\n                >\n                  VER DESPUÉS\n                </Button>\n              </HStack>\n            </Box>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </Box>\n  );\n}\n\nexport default SliderMain;\n","import { Box, Center, Icon } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieTrailer } from \"../actions/moviesActions\";\nimport \"../styles/animations.css\";\n\nconst TrailerMovie = () => {\n  const dispatch = useDispatch();\n  const trailer = useSelector((state) => state.movies.trailer);\n\n  return !trailer ? (\n    <Box\n      display=\"none\"\n      className=\"scene_element scene_element--fadeinleft\"\n    ></Box>\n  ) : (\n    <Center\n      className=\"scene_element scene_element--fadeinright\"\n      bgColor=\"brand.background\"\n      position=\"fixed\"\n      top=\"0\"\n      h=\"100vh\"\n      width=\"100vw\"\n      zIndex=\"200\"\n    >\n      <Icon\n        position=\"absolute\"\n        cursor=\"pointer\"\n        top=\"30px\"\n        left=\"40px\"\n        fontSize=\"30px\"\n        onClick={async (e) => dispatch(movieTrailer(null))}\n        as={FaArrowLeft}\n      />\n      <Box\n        as=\"iframe\"\n        src={`${trailer}`}\n        width=\"80%\"\n        height={[\"200px\", \"300px\", \"400px\", \"80%\"]}\n        allowFullScreen={true}\n      ></Box>\n    </Center>\n  );\n};\n\nexport default TrailerMovie;\n","import { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TitleSearch = () => {\n  const search = useSelector((state) => state.movies.search);\n  const selected = useSelector((state) => state.movies.selected);\n  let textSearch = \"\";\n  if (search === \"\" || (!!search && !selected.length)) {\n    textSearch = \"\";\n  } else if (search === \"Todas\") {\n    textSearch = search + \" las películas\";\n  } else if (search === \"Más valoradas\" || search === \"Menos valoradas\") {\n    textSearch = \"Películas \" + search.toLowerCase();\n  } else {\n    textSearch = `\"${search}\"`;\n  }\n\n  return (\n    <Box px=\"22px\" py=\"14px\" fontSize=\"3xl\" fontWeight=\"600\">\n      {textSearch}\n    </Box>\n  );\n};\n\nexport default TitleSearch;\n","import React from \"react\";\nimport NavbarMain from \"../components/NavbarMain.jsx\";\nimport CardsContainer from \"../components/CardsContainer.jsx\";\nimport ModalEachMovie from \"../components/ModalEachMovie.jsx\";\nimport SliderMain from \"../components/SliderMain.jsx\";\nimport TrailerMovie from \"../components/TrailerMovie.jsx\";\nimport TitleSearch from \"../components/TitleSearch.jsx\";\n\nfunction MainScreen() {\n  return (\n    <>\n      <NavbarMain />\n      <SliderMain />\n      <TitleSearch />\n      <CardsContainer />\n      <ModalEachMovie />\n      <TrailerMovie />\n    </>\n  );\n}\n\nexport default MainScreen;\n","import { types } from \"../types/types\";\n\nexport const crudSearch = (movie) => {\n    return {\n        type: types.crSearch,\n        payload: movie\n    }\n}","export const fileUpload = async (file) => {\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/dfx4uggfe/image/upload\"\n    const formData = new FormData();\n    formData.append(\"upload_preset\", \"journal-app\")\n    formData.append(\"file\", file)\n\n    try {\n        const resp = await fetch(cloudUrl,{\n            method: \"POST\",\n            body:formData\n        })\n        if(resp.ok){\n            const cloudRes = await resp.json()\n            console.log(cloudRes);\n            return cloudRes.secure_url\n        }else{\n            throw await resp.json()\n        }\n    } catch (error) {\n        throw error\n    }\n}","import React from \"react\";\nimport \"../../styles/animations.css\";\nimport {\n  Box,\n  Button,\n  Center,\n  FormControl,\n  FormLabel,\n  HStack,\n  Icon,\n  Img,\n  Input,\n  Textarea,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { MdClose } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { crudSearch } from \"../../actions/crudActions\";\nimport { FormikInput } from \"../FormikInput\";\n\nconst CardCrudPresenter = ({ formik, handleNewImage, handleDelete }) => {\n  const dispatch = useDispatch();\n  return (\n    <Center\n      className=\"scene_element scene_element--fadein\"\n      position=\"fixed\"\n      zIndex=\"100\"\n      w=\"100vw\"\n      h=\"100vh\"\n      top=\"0\"\n      as=\"form\"\n      bgColor=\"rgba(15,14,23,0.9)\"\n      p=\"10px\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Box\n        position=\"relative\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        borderRadius=\"10px\"\n        bgColor=\"brand.background\"\n        border=\"4px solid\"\n        borderColor=\"brand.primary\"\n        height=\"500px\"\n      >\n        <Box\n          position=\"absolute\"\n          top=\"20px\"\n          cursor=\"pointer\"\n          borderRadius=\"4px\"\n          bgColor=\"red\"\n          right=\"20px\"\n          onClick={() => dispatch(crudSearch(\"\"))}\n        >\n          <Icon color=\"white\" fontSize=\"30px\" as={MdClose} />\n        </Box>\n        <HStack\n          className=\"scene_element scene_element--fadeinright\"\n          px=\"10px\"\n          spacing={10}\n        >\n          <VStack width=\"250px\">\n            <FormControl>\n              <FormikInput\n                name=\"nameMovie\"\n                type=\"text\"\n                placeholder=\"Nombre\"\n                formik={formik}\n              />\n            </FormControl>\n            <Img\n              id=\"image-element\"\n              height=\"240px\"\n              src={formik.values.imageUrl}\n            />\n            <Button\n              colorScheme=\"teal\"\n              onClick={() =>\n                document.getElementById(\"update-image-input\").click()\n              }\n            >\n              Cambiar foto\n            </Button>\n            <Input\n              id=\"update-image-input\"\n              display=\"none\"\n              type=\"file\"\n              onChange={(e) =>\n                handleNewImage(e.target.files[0], formik.setFieldValue)\n              }\n            />\n          </VStack>\n\n          <VStack alignItems=\"start\" width=\"400px\">\n            <FormControl>\n              <FormLabel>Descripción</FormLabel>\n              <Textarea\n                name=\"description\"\n                placeholder=\"Descripción\"\n                borderColor=\"brand.primary\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                isInvalid={\n                  formik.touched.description && !!formik.errors.description\n                }\n              />\n            </FormControl>\n            <HStack spacing={10}>\n              <FormControl>\n                <FormLabel>Calificación</FormLabel>\n                <FormikInput\n                  name=\"calification\"\n                  type=\"number\"\n                  placeholder=\"Calificación\"\n                  formik={formik}\n                />\n              </FormControl>\n              <FormControl>\n                <FormLabel>Año</FormLabel>\n                <FormikInput\n                  name=\"year\"\n                  type=\"number\"\n                  placeholder=\"Año\"\n                  formik={formik}\n                />\n              </FormControl>\n            </HStack>\n            <HStack spacing={8}>\n              <FormControl>\n                <FormLabel>Género</FormLabel>\n                <FormikInput\n                  name=\"genre\"\n                  type=\"text\"\n                  placeholder=\"Género\"\n                  formik={formik}\n                />\n              </FormControl>\n              <FormControl>\n                <FormLabel>Duración</FormLabel>\n                <FormikInput\n                  name=\"duration\"\n                  type=\"number\"\n                  placeholder=\"Duración\"\n                  formik={formik}\n                />\n              </FormControl>\n            </HStack>\n          </VStack>\n        </HStack>\n        <HStack mt=\"20px\">\n          <Button colorScheme=\"red\" onClick={handleDelete}>\n            Eliminar\n          </Button>\n          <Button type=\"submit\" colorScheme=\"teal\">\n            Actualizar\n          </Button>\n        </HStack>\n      </Box>\n    </Center>\n  );\n};\n\nexport { CardCrudPresenter };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { crudSearch } from \"../../actions/crudActions\";\nimport { db } from \"../../firebase/firebase-config\";\nimport { fileUpload } from \"../../helpers/fileUpload\";\nimport Swal from \"sweetalert2\";\nimport { CardCrudPresenter } from \"./CardCrudPresenter\";\nconst CardCrud = ({ movie }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    await db.doc(`movies/${movie.id}`).delete();\n\n    Swal.fire({\n      icon: \"success\",\n      title: \"!Genial¡\",\n      text: \"Ha sido eliminada correctamente\",\n    });\n    dispatch(crudSearch([]));\n  };\n\n  const handleNewImage = async (file, setFieldValue) => {\n    const secureUrl = await fileUpload(file);\n    setFieldValue(\"imageUrl\", secureUrl);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      nameMovie: movie.nameMovie,\n      description: movie.description,\n      calification: movie.calification,\n      year: movie.year,\n      genre: movie.genre,\n      duration: movie.duration,\n      imageUrl: movie.imageUrl,\n    },\n    validationSchema: Yup.object({\n      nameMovie: Yup.string().required(\"El nombre es obligatorio\"),\n      description: Yup.string().required(\"La descripción es obligatoria\"),\n      calification: Yup.number()\n        .min(0, \"Debe ser al menos 0\")\n        .max(10, \"Debe ser como máximo 10\")\n        .required(\"La calificación es obligatoria\"),\n      year: Yup.number()\n        .min(1900, \"Año no válido\")\n        .max(new Date().getFullYear(), \"Año no válido\")\n        .required(\"El año es obligatorio\"),\n      genre: Yup.string().required(\"El género es obligatorio\"),\n      duration: Yup.number()\n        .min(1, \"Debe ser al menos 1\")\n        .required(\"La duración es obligatoria\"),\n    }),\n    onSubmit: async (values) => {\n      await db.doc(`movies/${movie.id}`).update(values);\n      Swal.fire({\n        icon: \"success\",\n        title: \"!Bien!\",\n        text: \"Ha sido actualizado\",\n      });\n      dispatch(crudSearch(\"\"));\n    },\n  });\n\n  return (\n    <CardCrudPresenter\n      formik={formik}\n      handleNewImage={handleNewImage}\n      handleDelete={handleDelete}\n    />\n  );\n};\n\nexport { CardCrud };\n","import { Box, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CardCrud } from \"./CardCrudContainer\";\n\nconst CardsCrud = () => {\n  const searchCrud = useSelector((state) => state.crud.search);\n\n  return (\n    <Box>\n      {!searchCrud.length ? (\n        <Text></Text>\n      ) : (\n        searchCrud.map((movie) => (\n          <CardCrud\n            key={movie.id}\n            movie={movie}\n          />\n        ))\n      )}\n    </Box>\n  );\n};\n\nexport default CardsCrud;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  HStack,\n  Input,\n  Text,\n  Textarea,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { FormError } from \"../FormError\";\n\nconst FormCrudPresenter = ({ formik, handleReset, handleImage }) => {\n  return (\n    <Flex mt=\"20px\" justifyContent=\"center\">\n      <Box\n        maxWidth=\"500px\"\n        mb=\"20px\"\n        borderRadius=\"10px\"\n        p=\"20px\"\n        bgColor=\"whiteAlpha.300\"\n      >\n        <Box\n          as=\"form\"\n          onSubmit={(e) => {\n            formik.handleSubmit();\n            handleReset(e);\n          }}\n        >\n          <Text textAlign=\"center\" fontSize=\"2xl\" color=\"brand.primary\">\n            Agrega una nueva película\n          </Text>\n          <VStack spacing=\"20px\">\n            <FormControl id=\"movie-name\">\n              <FormLabel>Nombre *</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"nameMovie\"\n                value={formik.values.nameMovie}\n                onChange={formik.handleChange}\n              />\n              <FormError error={formik.errors.nameMovie} />\n            </FormControl>\n            <FormControl id=\"movie-description\">\n              <FormLabel>Descripción *</FormLabel>\n              <Textarea\n                height=\"fit-content\"\n                name=\"description\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n              ></Textarea>\n              <FormError error={formik.errors.description} />\n            </FormControl>\n            <FormControl id=\"movie-genre\">\n              <FormLabel>Género *</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"genre\"\n                value={formik.values.genre}\n                onChange={formik.handleChange}\n              />\n              <FormError error={formik.errors.genre} />\n            </FormControl>\n            <FormControl id=\"movie-image\">\n              <FormLabel>Imagen *</FormLabel>\n              <Input type=\"file\" name=\"duration\" onChange={handleImage} />\n              <FormError error={formik.errors.imageUrl} />\n            </FormControl>\n            <HStack alignItems=\"start\" spacing=\"20px\">\n              <FormControl id=\"movie-year\">\n                <FormLabel>Año *</FormLabel>\n                <Input\n                  type=\"number\"\n                  name=\"year\"\n                  value={formik.values.year}\n                  onChange={formik.handleChange}\n                />\n                <FormError error={formik.errors.year} />\n              </FormControl>\n              <FormControl id=\"movie-calification\">\n                <FormLabel>Calificación *</FormLabel>\n                <Input\n                  type=\"number\"\n                  step=\"0.1\"\n                  name=\"calification\"\n                  value={formik.values.calification}\n                  onChange={formik.handleChange}\n                />\n                <FormError error={formik.errors.calification} />\n              </FormControl>\n              <FormControl id=\"movie-duration\">\n                <FormLabel>Duración *</FormLabel>\n                <Input\n                  type=\"number\"\n                  name=\"duration\"\n                  value={formik.values.duration}\n                  onChange={formik.handleChange}\n                />\n                <FormError error={formik.errors.duration} />\n              </FormControl>\n            </HStack>\n            <Button type=\"submit\" bgColor=\"blackAlpha.600\" width=\"60%\">\n              Enviar\n            </Button>\n          </VStack>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport { FormCrudPresenter };\n","import { useFormik } from \"formik\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { db } from \"../../firebase/firebase-config\";\nimport { fileUpload } from \"../../helpers/fileUpload\";\nimport Swal from \"sweetalert2\";\nimport { FormCrudPresenter } from \"./FormCrudPresenter\";\n\nconst FormCrud = () => {\n  const formik = useFormik({\n    initialValues: {\n      nameMovie: \"\",\n      description: \"\",\n      genre: \"\",\n      year: 0,\n      calification: 0,\n      duration: 0,\n      imageUrl: \"\",\n    },\n    validationSchema: Yup.object({\n      nameMovie: Yup.string()\n        .min(1, \"Debe tener al menos 1 caracter\")\n        .required(\"Este campo es requerido\"),\n      description: Yup.string()\n        .max(300, \"Puede tener como máximo 300 caracteres\")\n        .min(50, \"Debe tener como minimo 50 caracteres\")\n        .required(\"Este campo es requerido\"),\n      genre: Yup.string()\n        .max(15, \"Debe tener 15 caracteres o menos\")\n        .min(1, \"Debe tener al menos 1 caracter\")\n        .required(\"Este campo es requerido\"),\n      imageUrl: Yup.string()\n        .min(1, \"Debe elegir una imagen\")\n        .required(\"requerido\"),\n      year: Yup.number()\n        .min(1800, \"Debe ser amyor a 1800\")\n        .max(2022, \"Debe ser menor a 2023\")\n        .required(\"Requerido\"),\n      calification: Yup.number()\n        .min(0, \"Debe ser mayor a 0\")\n        .max(10, \"Debe ser menor a 10\")\n        .required(\"Requerido\"),\n      duration: Yup.number()\n        .min(20, \"Debe ser mayor a 20\")\n        .max(600, \"Debe ser menor a 600\")\n        .required(\"Requerido\"),\n    }),\n    validateOnChange: (values) => {\n      console.log(values);\n    },\n    onSubmit: (values) => {\n      values.nameMovie = values.nameMovie.toUpperCase();\n      db.collection(\"movies\").add(values);\n      Swal.fire({\n        icon: \"success\",\n        title: \"!Genial!\",\n        text: \"Se ha agregado la película\",\n      });\n    },\n  });\n\n  const handleImage = async (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      let secureUrl = await fileUpload(file);\n      console.log(secureUrl);\n      formik.values.imageUrl = secureUrl;\n    }\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    e.target.reset();\n  };\n\n  return (\n    <FormCrudPresenter\n      formik={formik}\n      handleImage={handleImage}\n      handleReset={handleReset}\n    />\n  );\n};\n\nexport default FormCrud;\n","import React from \"react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaHome } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { crudSearch } from \"../../actions/crudActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GoHomeIcon = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <Icon\n      cursor=\"pointer\"\n      mx=\"10px\"\n      fontSize=\"20px\"\n      color=\"brand.primary\"\n      as={FaHome}\n      onClick={() => {\n        dispatch(crudSearch(\"\"));\n        history.goBack();\n      }}\n    />\n  );\n};\n\nexport { GoHomeIcon };\n","import { Box, Button, HStack, Input, Text } from \"@chakra-ui/react\";\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crudSearch } from \"../../actions/crudActions\";\nimport { db } from \"../../firebase/firebase-config\";\nimport { GoHomeIcon } from \"./GoHomeIcon\";\n\nconst SearchCrud = () => {\n  const dispatch = useDispatch();\n  const searchCrud = useSelector((state) => state.crud.search);\n  const inputRef = useRef(\"\");\n\n  const handleSearchCrud = async () => {\n    let searched = inputRef.current.value.toUpperCase();\n    let movieSearched = [];\n    await db\n      .collection(\"movies\")\n      .where(\"nameMovie\", \"==\", searched)\n      .get()\n      .then((snap) => {\n        snap.forEach((hijo) => {\n          movieSearched.push({\n            id: hijo.id,\n            ...hijo.data(),\n          });\n        });\n      });\n    dispatch(crudSearch(movieSearched));\n  };\n\n  return (\n    <Box py=\"20px\" maxWidth=\"70%\" mx=\"auto\">\n      <HStack>\n        <GoHomeIcon />\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Nombre de la película...\"\n        />\n        <Button bgColor=\"brand.primary\" onClick={handleSearchCrud}>\n          Buscar\n        </Button>\n      </HStack>\n      <Text px=\"50px\">\n        {searchCrud.length === 0 && Array.isArray(searchCrud)\n          ? \"No hay resultados para tu búsqueda\"\n          : null}\n      </Text>\n    </Box>\n  );\n};\n\nexport default SearchCrud;\n","import React from \"react\";\nimport CardsCrud from \"../components/crud/CardsCrud\";\nimport FormCrud from \"../components/crud/FormCrud\";\nimport SearchCrud from \"../components/crud/SearchCrud\";\n\nconst Crud = () => {\n  return (\n    <>\n      <SearchCrud />\n      <CardsCrud />\n      <FormCrud />\n    </>\n  );\n};\n\nexport default Crud;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const AdminRoute = ({\n    isAuthenticated,\n    component: Component,\n    uid,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated && uid === process.env.REACT_APP_ADMIN_CRUD )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\nAdminRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React,{useEffect, useState} from 'react';\nimport firebase from \"firebase\"\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { login } from \"../actions/auth\"\nimport { AuthRouter } from './AuthRouter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {PrivateRoute} from \"./PrivateRoute\"\nimport {PublicRoute} from \"./PublicRoute\"\nimport MainScreen from '../containers/MainScreen';\nimport Crud from '../containers/Crud';\nimport { AdminRoute } from './AdminRoute';\n\nexport const AppRouter = () => {\n\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    \n    const dispatch = useDispatch()\n    const uid = useSelector(state => state.auth.uid)\n\n  \n\n    \n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged(async(user)=>{\n\n\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true)\n            }else{\n                setIsLoggedIn(false)\n            }\n            setChecking(false)\n\n\n        })\n    }, [dispatch, setChecking])\n\n    if (checking) {\n        return(\n            <h1>\n                Cargando...\n            </h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        component={ MainScreen }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <AdminRoute \n                        exact\n                        path=\"/crud\"\n                        component={ Crud }\n                        isAuthenticated={isLoggedIn}\n                        uid={uid}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { store } from \"../store/store\";\nimport { Provider } from \"react-redux\";\n\nimport theme from \"../styles/theme\";\nimport { AppRouter } from \"../routers/AppRouter\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <AppRouter />\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}